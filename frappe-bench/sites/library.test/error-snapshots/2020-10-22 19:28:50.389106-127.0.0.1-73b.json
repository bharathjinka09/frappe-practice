{
 "etype": "TypeError",
 "evalue": "TypeError(\"login_via_google() missing 2 required positional arguments: 'code' and 'state'\")",
 "exception": {
  "args": [
   40,
   34,
   108,
   111,
   103,
   105,
   110,
   95,
   118,
   105,
   97,
   95,
   103,
   111,
   111,
   103,
   108,
   101,
   40,
   41,
   32,
   109,
   105,
   115,
   115,
   105,
   110,
   103,
   32,
   50,
   32,
   114,
   101,
   113,
   117,
   105,
   114,
   101,
   100,
   32,
   112,
   111,
   115,
   105,
   116,
   105,
   111,
   110,
   97,
   108,
   32,
   97,
   114,
   103,
   117,
   109,
   101,
   110,
   116,
   115,
   58,
   32,
   39,
   99,
   111,
   100,
   101,
   39,
   32,
   97,
   110,
   100,
   32,
   39,
   115,
   116,
   97,
   116,
   101,
   39,
   34,
   44,
   41
  ],
  "with_traceback": [
   60,
   98,
   117,
   105,
   108,
   116,
   45,
   105,
   110,
   32,
   109,
   101,
   116,
   104,
   111,
   100,
   32,
   119,
   105,
   116,
   104,
   95,
   116,
   114,
   97,
   99,
   101,
   98,
   97,
   99,
   107,
   32,
   111,
   102,
   32,
   84,
   121,
   112,
   101,
   69,
   114,
   114,
   111,
   114,
   32,
   111,
   98,
   106,
   101,
   99,
   116,
   62
  ]
 },
 "frames": [
  {
   "call": "(request=<Request 'http://127.0.0.1:8000/api/method/frappe.www.login.login_via_google' [GET]>)",
   "dump": {
    "frappe. api": "<module 'frappe.api' from '/home/mieone/Download...practice/frappe-bench/apps/frappe/frappe/api.py'>",
    "frappe.api. handle": "<function handle>",
    "global frappe": "<module 'frappe' from '/home/mieone/Downloads/fr...ice/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "response": "None"
   },
   "file": "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/app.py",
   "func": "application",
   "lines": {
    "62": "",
    "63": "\t\telif frappe.request.path.startswith(\"/api/\"):",
    "64": "\t\t\tresponse = frappe.api.handle()",
    "65": "",
    "66": "\t\telif frappe.request.path.startswith('/backups'):"
   },
   "lnum": 64
  },
  {
   "call": "()",
   "dump": {
    "frappe. handler": "<module 'frappe.handler' from '/home/mieone/Down...tice/frappe-bench/apps/frappe/frappe/handler.py'>",
    "frappe.handler. handle": "<function handle>",
    "global frappe": "<module 'frappe' from '/home/mieone/Downloads/fr...ice/frappe-bench/apps/frappe/frappe/__init__.py'>"
   },
   "file": "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/api.py",
   "func": "handle",
   "lines": {
    "56": "\tif call==\"method\":",
    "57": "\t\tfrappe.local.form_dict.cmd = doctype",
    "58": "\t\treturn frappe.handler.handle()",
    "59": "",
    "60": "\telif call==\"resource\":"
   },
   "lnum": 58
  },
  {
   "call": "()",
   "dump": {
    "cmd": "'frappe.www.login.login_via_google'",
    "data": "None",
    "global execute_cmd": "<function execute_cmd>"
   },
   "file": "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/handler.py",
   "func": "handle",
   "lines": {
    "28": "",
    "29": "\tif cmd!='login':",
    "30": "\t\tdata = execute_cmd(cmd)",
    "31": "",
    "32": "\t# data can be an empty string or list which are valid responses"
   },
   "lnum": 30
  },
  {
   "call": "(cmd='frappe.www.login.login_via_google', from_async=False)",
   "dump": {
    "frappe. call": "<function call>",
    "frappe. form_dict": "{'cmd': 'frappe.www.login.login_via_google'}",
    "global frappe": "<module 'frappe' from '/home/mieone/Downloads/fr...ice/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "method": "<function login_via_google>"
   },
   "file": "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/handler.py",
   "func": "execute_cmd",
   "lines": {
    "68": "\tis_valid_http_method(method)",
    "69": "",
    "70": "\treturn frappe.call(method, **frappe.form_dict)",
    "71": "",
    "72": "def is_valid_http_method(method):"
   },
   "lnum": 70
  },
  {
   "call": "(fn=<function login_via_google>, *args=(), **kwargs={'cmd': 'frappe.www.login.login_via_google'})",
   "dump": {
    "args": "()",
    "fn": "<function login_via_google>",
    "newargs": "{}"
   },
   "file": "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/__init__.py",
   "func": "call",
   "lines": {
    "1109": "\tnewargs = get_newargs(fn, kwargs)",
    "1110": "",
    "1111": "\treturn fn(*args, **newargs)",
    "1112": "",
    "1113": "def get_newargs(fn, kwargs):"
   },
   "lnum": 1111
  }
 ],
 "locals": {
  "args": "()",
  "fn": "<function login_via_google>",
  "kwargs": "{'cmd': 'frappe.www.login.login_via_google'}",
  "newargs": "{}"
 },
 "pyver": "Python 3.7.9: /home/mieone/Downloads/frappe-practice/frappe-bench/env/bin/python (prefix: /home/mieone/Downloads/frappe-practice/frappe-bench/env)",
 "timestamp": "2020-10-22 19:28:50.389238",
 "traceback": "Traceback (most recent call last):\n  File \"/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/app.py\", line 64, in application\n    response = frappe.api.handle()\n  File \"/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/api.py\", line 58, in handle\n    return frappe.handler.handle()\n  File \"/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/handler.py\", line 30, in handle\n    data = execute_cmd(cmd)\n  File \"/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/handler.py\", line 70, in execute_cmd\n    return frappe.call(method, **frappe.form_dict)\n  File \"/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/__init__.py\", line 1111, in call\n    return fn(*args, **newargs)\nTypeError: login_via_google() missing 2 required positional arguments: 'code' and 'state'\n"
}