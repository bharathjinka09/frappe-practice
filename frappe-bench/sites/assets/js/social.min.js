(function () {
	'use strict';

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var script = {
		props: [
			'liked_by',
			'comment_count' ],
		computed: {
			like_count: function like_count() {
				return this.split_string(this.liked_by).length;
			},
			post_liked: function post_liked() {
				return this.split_string(this.liked_by).includes(frappe.session.user);
			},
			liked_by_data: function liked_by_data() {
				return JSON.stringify(this.split_string(this.liked_by));
			}
		},
		methods: {
			split_string: function split_string(str) {
				return str && str !== '' ? str.split('\n') : []
			}
		}
	};

	/* script */
	            var __vue_script__ = script;
	            
	/* template */
	var __vue_render__ = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", { staticClass: "post-action-container" }, [
	    _c(
	      "div",
	      {
	        staticClass: "like",
	        on: {
	          click: function($event) {
	            return _vm.$emit("toggle_like")
	          }
	        }
	      },
	      [
	        _c("i", {
	          staticClass: "octicon octicon-heart",
	          class: { liked: _vm.post_liked }
	        }),
	        _vm._v(" "),
	        _c(
	          "span",
	          {
	            staticClass: "likes",
	            attrs: { "data-liked-by": _vm.liked_by_data }
	          },
	          [_vm._v(_vm._s(_vm.like_count))]
	        )
	      ]
	    ),
	    _vm._v(" "),
	    _c(
	      "div",
	      {
	        staticClass: "comment",
	        on: {
	          click: function($event) {
	            return _vm.$emit("toggle_comment")
	          }
	        }
	      },
	      [
	        _c("i", { staticClass: "octicon octicon-comment" }),
	        _vm._v(" "),
	        _c("span", { staticClass: "comment_count" }, [
	          _vm._v(_vm._s(_vm.comment_count))
	        ])
	      ]
	    )
	  ])
	};
	var __vue_staticRenderFns__ = [];
	__vue_render__._withStripped = true;

	  /* style */
	  var __vue_inject_styles__ = function (inject) {
	    if (!inject) { return }
	    inject("data-v-0968c692_0", { source: ".post-action-container[data-v-0968c692] {\n  display: flex;\n  background-color: #F6F6F6;\n  padding: 10px;\n}\n.post-action-container .comment[data-v-0968c692],\n.post-action-container .like[data-v-0968c692] {\n  padding-right: 20px;\n  cursor: pointer;\n  color: #8d99a6;\n}\n.post-action-container .comment span[data-v-0968c692],\n.post-action-container .like span[data-v-0968c692] {\n  padding: 5px;\n}\n.post-action-container .comment[data-v-0968c692]:hover,\n.post-action-container .like[data-v-0968c692]:hover {\n  color: #707f90;\n}\n.post-action-container .likes[data-v-0968c692] {\n  cursor: pointer;\n}\n.post-action-container .liked[data-v-0968c692] {\n  color: #fc4f51;\n}\n.post-action-container .liked[data-v-0968c692]:hover {\n  color: #fd8183 !important;\n}\n.post-action-container .pinned[data-v-0968c692] {\n  color: black;\n}\n", map: {"version":3,"sources":["PostAction.vue"],"names":[],"mappings":"AAAA;EACE,aAAa;EACb,yBAAyB;EACzB,aAAa;AACf;AACA;;EAEE,mBAAmB;EACnB,eAAe;EACf,cAAc;AAChB;AACA;;EAEE,YAAY;AACd;AACA;;EAEE,cAAc;AAChB;AACA;EACE,eAAe;AACjB;AACA;EACE,cAAc;AAChB;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,YAAY;AACd","file":"PostAction.vue","sourcesContent":[".post-action-container {\n  display: flex;\n  background-color: #F6F6F6;\n  padding: 10px;\n}\n.post-action-container .comment,\n.post-action-container .like {\n  padding-right: 20px;\n  cursor: pointer;\n  color: #8d99a6;\n}\n.post-action-container .comment span,\n.post-action-container .like span {\n  padding: 5px;\n}\n.post-action-container .comment:hover,\n.post-action-container .like:hover {\n  color: #707f90;\n}\n.post-action-container .likes {\n  cursor: pointer;\n}\n.post-action-container .liked {\n  color: #fc4f51;\n}\n.post-action-container .liked:hover {\n  color: #fd8183 !important;\n}\n.post-action-container .pinned {\n  color: black;\n}\n"]}, media: undefined });

	  };
	  /* scoped */
	  var __vue_scope_id__ = "data-v-0968c692";
	  /* module identifier */
	  var __vue_module_identifier__ = undefined;
	  /* functional template */
	  var __vue_is_functional_template__ = false;
	  /* component normalizer */
	  function __vue_normalize__(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/components/PostAction.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    {
	      var hook;
	      if (style) {
	        hook = function(context) {
	          style.call(this, createInjector(context));
	        };
	      }

	      if (hook !== undefined) {
	        if (component.functional) {
	          // register for functional component in vue file
	          var originalRender = component.render;
	          component.render = function renderWithStyleInjection(h, context) {
	            hook.call(context);
	            return originalRender(h, context)
	          };
	        } else {
	          // inject component registration as beforeCreate hook
	          var existing = component.beforeCreate;
	          component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
	        }
	      }
	    }

	    return component
	  }
	  /* style inject */
	  function __vue_create_injector__() {
	    var head = document.head || document.getElementsByTagName('head')[0];
	    var styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {});
	    var isOldIE =
	      typeof navigator !== 'undefined' &&
	      /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

	    return function addStyle(id, css) {
	      if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

	      var group = isOldIE ? css.media || 'default' : id;
	      var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

	      if (!style.ids.includes(id)) {
	        var code = css.source;
	        var index = style.ids.length;

	        style.ids.push(id);

	        if (isOldIE) {
	          style.element = style.element || document.querySelector('style[data-group=' + group + ']');
	        }

	        if (!style.element) {
	          var el = style.element = document.createElement('style');
	          el.type = 'text/css';

	          if (css.media) { el.setAttribute('media', css.media); }
	          if (isOldIE) {
	            el.setAttribute('data-group', group);
	            el.setAttribute('data-next-index', '0');
	          }

	          head.appendChild(el);
	        }

	        if (isOldIE) {
	          index = parseInt(style.element.getAttribute('data-next-index'));
	          style.element.setAttribute('data-next-index', index + 1);
	        }

	        if (style.element.styleSheet) {
	          style.parts.push(code);
	          style.element.styleSheet.cssText = style.parts
	            .filter(Boolean)
	            .join('\n');
	        } else {
	          var textNode = document.createTextNode(code);
	          var nodes = style.element.childNodes;
	          if (nodes[index]) { style.element.removeChild(nodes[index]); }
	          if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
	          else { style.element.appendChild(textNode); }
	        }
	      }
	    }
	  }
	  /* style inject SSR */
	  

	  
	  var PostAction = __vue_normalize__(
	    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
	    __vue_inject_styles__,
	    __vue_script__,
	    __vue_scope_id__,
	    __vue_is_functional_template__,
	    __vue_module_identifier__,
	    __vue_create_injector__,
	    undefined
	  );

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var script$1 = {
		props: ['comments'],
		mounted: function mounted() {
			this.make_comment_section();
			this.make_mentions_clickable(this.$refs['comments']);
		},
		methods: {
			get_avatar: function get_avatar(user) {
				return frappe.avatar(user)
			},
			get_time: function get_time(timestamp) {
				return comment_when(timestamp, true)
			},
			go_to_profile_page: function go_to_profile_page(user) {
				frappe.set_route('social', 'profile', user);
			},
			make_comment_section: function make_comment_section() {
				this.comment_section = frappe.ui.form.make_control({
					parent: this.$refs['comment-section'],
					only_input: true,
					render_input: true,
					no_wrapper: true,
					mentions: this.get_names_for_mentions(),
					df: {
						fieldtype: 'Comment',
						fieldname: 'comment'
					},
					on_submit: this.create_comment.bind(this)
				});
			},
			create_comment: function create_comment() {
				var message = this.comment_section.get_value().replace('<div><br></div>', '');
				if (!strip_html(message)) { return }
				frappe.utils.play_sound("click");
				this.$emit('create_comment', message);
				this.comment_section.clear();
			},
			get_names_for_mentions: function get_names_for_mentions() {
				var valid_users = Object.keys(frappe.boot.user_info)
					.filter(function (user) { return !["Administrator", "Guest"].includes(user); });
				valid_users = valid_users
					.filter(function (user) { return frappe.boot.user_info[user].allowed_in_mentions==1; });
				return valid_users.map(function (user) { return frappe.boot.user_info[user].name; });
			},
			make_mentions_clickable: function make_mentions_clickable(parent_element) {
				var this$1 = this;

				Array.from(parent_element.getElementsByClassName('mention'))
					.forEach(function (mention) {
						mention.classList.add('cursor-pointer');
						mention.addEventListener('click', function () {
							this$1.go_to_profile_page(mention.dataset.value);
						});
					});
			}
		}
	};

	/* script */
	            var __vue_script__$1 = script$1;
	            
	/* template */
	var __vue_render__$1 = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", [
	    _c("div", { staticClass: "comment-box flex-column" }, [
	      _c("div", { staticClass: "text-muted comment-label" }, [
	        _vm._v(_vm._s(_vm.__("Add a comment")))
	      ]),
	      _vm._v(" "),
	      _c("div", { ref: "comment-section" }),
	      _vm._v(" "),
	      _c("div", { staticClass: "flex justify-between" }, [
	        _c("div", { staticClass: "text-muted small" }, [
	          _vm._v(
	            "\n\t\t\t\t" +
	              _vm._s(_vm.__("Ctrl+Enter to add comment")) +
	              "\n\t\t\t"
	          )
	        ]),
	        _vm._v(" "),
	        _c(
	          "button",
	          {
	            staticClass: "btn btn-primary btn-sm",
	            on: { click: _vm.create_comment }
	          },
	          [_vm._v("\n\t\t\t\t" + _vm._s(_vm.__("Comment")) + "\n\t\t\t")]
	        )
	      ])
	    ]),
	    _vm._v(" "),
	    _vm.comments.length
	      ? _c(
	          "div",
	          { ref: "comments", staticClass: "comment-list" },
	          _vm._l(_vm.comments, function(comment) {
	            return _c("div", { key: comment.name, staticClass: "comment" }, [
	              _c("span", {
	                staticClass: "cursor-pointer",
	                domProps: { innerHTML: _vm._s(_vm.get_avatar(comment.owner)) },
	                on: {
	                  click: function($event) {
	                    return _vm.go_to_profile_page(comment.owner)
	                  }
	                }
	              }),
	              _vm._v(" "),
	              _c("span", {
	                staticClass: "content",
	                domProps: { innerHTML: _vm._s(comment.content) }
	              }),
	              _vm._v(" "),
	              _c("span", {
	                staticClass: "text-muted",
	                domProps: { innerHTML: _vm._s(_vm.get_time(comment.creation)) }
	              })
	            ])
	          }),
	          0
	        )
	      : _vm._e()
	  ])
	};
	var __vue_staticRenderFns__$1 = [];
	__vue_render__$1._withStripped = true;

	  /* style */
	  var __vue_inject_styles__$1 = function (inject) {
	    if (!inject) { return }
	    inject("data-v-3e9a1932_0", { source: ".comment-box .comment-label[data-v-3e9a1932] {\n  margin-bottom: 5px;\n}\n.comment-box[data-v-3e9a1932]  .ql-editor {\n  background: white;\n  border-radius: 4px;\n  min-height: 60px !important;\n  border: 1px solid #d1d8dd;\n}\n.comment-box button[data-v-3e9a1932] {\n  padding: 2px 5px;\n  font-size: 10px;\n  align-self: flex-end;\n}\n.comment-list[data-v-3e9a1932] {\n  margin-top: 10px;\n}\n.comment-list .comment[data-v-3e9a1932] {\n  display: flex;\n  padding: 5px 0;\n}\n.comment-list .comment .comment-input-wrapper[data-v-3e9a1932] {\n  margin-top: -6px;\n  font-size: 11px;\n}\n.comment-list .comment .content[data-v-3e9a1932] {\n  align-self: center;\n  font-size: 12px;\n  flex: 1;\n}\n", map: {"version":3,"sources":["PostComment.vue"],"names":[],"mappings":"AAAA;EACE,kBAAkB;AACpB;AACA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,2BAA2B;EAC3B,yBAAyB;AAC3B;AACA;EACE,gBAAgB;EAChB,eAAe;EACf,oBAAoB;AACtB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,aAAa;EACb,cAAc;AAChB;AACA;EACE,gBAAgB;EAChB,eAAe;AACjB;AACA;EACE,kBAAkB;EAClB,eAAe;EACf,OAAO;AACT","file":"PostComment.vue","sourcesContent":[".comment-box .comment-label {\n  margin-bottom: 5px;\n}\n.comment-box ::v-deep .ql-editor {\n  background: white;\n  border-radius: 4px;\n  min-height: 60px !important;\n  border: 1px solid #d1d8dd;\n}\n.comment-box button {\n  padding: 2px 5px;\n  font-size: 10px;\n  align-self: flex-end;\n}\n.comment-list {\n  margin-top: 10px;\n}\n.comment-list .comment {\n  display: flex;\n  padding: 5px 0;\n}\n.comment-list .comment .comment-input-wrapper {\n  margin-top: -6px;\n  font-size: 11px;\n}\n.comment-list .comment .content {\n  align-self: center;\n  font-size: 12px;\n  flex: 1;\n}\n"]}, media: undefined });

	  };
	  /* scoped */
	  var __vue_scope_id__$1 = "data-v-3e9a1932";
	  /* module identifier */
	  var __vue_module_identifier__$1 = undefined;
	  /* functional template */
	  var __vue_is_functional_template__$1 = false;
	  /* component normalizer */
	  function __vue_normalize__$1(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/components/PostComment.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    {
	      var hook;
	      if (style) {
	        hook = function(context) {
	          style.call(this, createInjector(context));
	        };
	      }

	      if (hook !== undefined) {
	        if (component.functional) {
	          // register for functional component in vue file
	          var originalRender = component.render;
	          component.render = function renderWithStyleInjection(h, context) {
	            hook.call(context);
	            return originalRender(h, context)
	          };
	        } else {
	          // inject component registration as beforeCreate hook
	          var existing = component.beforeCreate;
	          component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
	        }
	      }
	    }

	    return component
	  }
	  /* style inject */
	  function __vue_create_injector__$1() {
	    var head = document.head || document.getElementsByTagName('head')[0];
	    var styles = __vue_create_injector__$1.styles || (__vue_create_injector__$1.styles = {});
	    var isOldIE =
	      typeof navigator !== 'undefined' &&
	      /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

	    return function addStyle(id, css) {
	      if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

	      var group = isOldIE ? css.media || 'default' : id;
	      var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

	      if (!style.ids.includes(id)) {
	        var code = css.source;
	        var index = style.ids.length;

	        style.ids.push(id);

	        if (isOldIE) {
	          style.element = style.element || document.querySelector('style[data-group=' + group + ']');
	        }

	        if (!style.element) {
	          var el = style.element = document.createElement('style');
	          el.type = 'text/css';

	          if (css.media) { el.setAttribute('media', css.media); }
	          if (isOldIE) {
	            el.setAttribute('data-group', group);
	            el.setAttribute('data-next-index', '0');
	          }

	          head.appendChild(el);
	        }

	        if (isOldIE) {
	          index = parseInt(style.element.getAttribute('data-next-index'));
	          style.element.setAttribute('data-next-index', index + 1);
	        }

	        if (style.element.styleSheet) {
	          style.parts.push(code);
	          style.element.styleSheet.cssText = style.parts
	            .filter(Boolean)
	            .join('\n');
	        } else {
	          var textNode = document.createTextNode(code);
	          var nodes = style.element.childNodes;
	          if (nodes[index]) { style.element.removeChild(nodes[index]); }
	          if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
	          else { style.element.appendChild(textNode); }
	        }
	      }
	    }
	  }
	  /* style inject SSR */
	  

	  
	  var PostComment = __vue_normalize__$1(
	    { render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 },
	    __vue_inject_styles__$1,
	    __vue_script__$1,
	    __vue_scope_id__$1,
	    __vue_is_functional_template__$1,
	    __vue_module_identifier__$1,
	    __vue_create_injector__$1,
	    undefined
	  );

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var script$2 = {
		props: ['options'],
	};

	/* script */
	            var __vue_script__$2 = script$2;
	            
	/* template */
	var __vue_render__$2 = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", { staticClass: "dropdown" }, [
	    _c("span", {
	      staticClass: "caret cursor-pointer dropdown-toggle",
	      attrs: { "data-toggle": "dropdown" }
	    }),
	    _vm._v(" "),
	    _c(
	      "ul",
	      { staticClass: "dropdown-menu" },
	      _vm._l(_vm.options, function(option) {
	        return _c("li", { key: option.label }, [
	          _c("a", { on: { click: option.action } }, [
	            _vm._v(_vm._s(option.label))
	          ])
	        ])
	      }),
	      0
	    )
	  ])
	};
	var __vue_staticRenderFns__$2 = [];
	__vue_render__$2._withStripped = true;

	  /* style */
	  var __vue_inject_styles__$2 = function (inject) {
	    if (!inject) { return }
	    inject("data-v-114d111d_0", { source: ".dropdown-menu[data-v-114d111d] {\n  min-width: 100px;\n  left: auto;\n  right: 0;\n}\n.dropdown-menu a[data-v-114d111d] {\n  padding: 12px;\n  font-size: 10px;\n}\n", map: {"version":3,"sources":["PostDropdownMenu.vue"],"names":[],"mappings":"AAAA;EACE,gBAAgB;EAChB,UAAU;EACV,QAAQ;AACV;AACA;EACE,aAAa;EACb,eAAe;AACjB","file":"PostDropdownMenu.vue","sourcesContent":[".dropdown-menu {\n  min-width: 100px;\n  left: auto;\n  right: 0;\n}\n.dropdown-menu a {\n  padding: 12px;\n  font-size: 10px;\n}\n"]}, media: undefined });

	  };
	  /* scoped */
	  var __vue_scope_id__$2 = "data-v-114d111d";
	  /* module identifier */
	  var __vue_module_identifier__$2 = undefined;
	  /* functional template */
	  var __vue_is_functional_template__$2 = false;
	  /* component normalizer */
	  function __vue_normalize__$2(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/components/PostDropdownMenu.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    {
	      var hook;
	      if (style) {
	        hook = function(context) {
	          style.call(this, createInjector(context));
	        };
	      }

	      if (hook !== undefined) {
	        if (component.functional) {
	          // register for functional component in vue file
	          var originalRender = component.render;
	          component.render = function renderWithStyleInjection(h, context) {
	            hook.call(context);
	            return originalRender(h, context)
	          };
	        } else {
	          // inject component registration as beforeCreate hook
	          var existing = component.beforeCreate;
	          component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
	        }
	      }
	    }

	    return component
	  }
	  /* style inject */
	  function __vue_create_injector__$2() {
	    var head = document.head || document.getElementsByTagName('head')[0];
	    var styles = __vue_create_injector__$2.styles || (__vue_create_injector__$2.styles = {});
	    var isOldIE =
	      typeof navigator !== 'undefined' &&
	      /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

	    return function addStyle(id, css) {
	      if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

	      var group = isOldIE ? css.media || 'default' : id;
	      var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

	      if (!style.ids.includes(id)) {
	        var code = css.source;
	        var index = style.ids.length;

	        style.ids.push(id);

	        if (isOldIE) {
	          style.element = style.element || document.querySelector('style[data-group=' + group + ']');
	        }

	        if (!style.element) {
	          var el = style.element = document.createElement('style');
	          el.type = 'text/css';

	          if (css.media) { el.setAttribute('media', css.media); }
	          if (isOldIE) {
	            el.setAttribute('data-group', group);
	            el.setAttribute('data-next-index', '0');
	          }

	          head.appendChild(el);
	        }

	        if (isOldIE) {
	          index = parseInt(style.element.getAttribute('data-next-index'));
	          style.element.setAttribute('data-next-index', index + 1);
	        }

	        if (style.element.styleSheet) {
	          style.parts.push(code);
	          style.element.styleSheet.cssText = style.parts
	            .filter(Boolean)
	            .join('\n');
	        } else {
	          var textNode = document.createTextNode(code);
	          var nodes = style.element.childNodes;
	          if (nodes[index]) { style.element.removeChild(nodes[index]); }
	          if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
	          else { style.element.appendChild(textNode); }
	        }
	      }
	    }
	  }
	  /* style inject SSR */
	  

	  
	  var PostDropdownMenu = __vue_normalize__$2(
	    { render: __vue_render__$2, staticRenderFns: __vue_staticRenderFns__$2 },
	    __vue_inject_styles__$2,
	    __vue_script__$2,
	    __vue_scope_id__$2,
	    __vue_is_functional_template__$2,
	    __vue_module_identifier__$2,
	    __vue_create_injector__$2,
	    undefined
	  );

	//

	var script$3 = {
		props: ['post'],
		components: {
			PostAction: PostAction,
			PostComment: PostComment,
			PostDropdownMenu: PostDropdownMenu
		},
		data: function data() {
			return {
				user_avatar: frappe.avatar(this.post.owner, 'avatar-medium'),
				post_time: comment_when(this.post.creation),
				user_name: frappe.user_info(this.post.owner).fullname,
				comment_count: 0,
				comments: [],
				show_comments: false,
				is_globally_pinnable: frappe.user_roles.includes('System Manager') && frappe.social.is_home_page(),
				is_pinnable: false,
				is_user_post_owner: this.post.owner === frappe.session.user
			}
		},
		computed: {
			can_pin: function can_pin() {
				return this.is_globally_pinnable || this.is_pinnable
			},
			is_pinned: function is_pinned() {
				return this.post.is_globally_pinned && frappe.social.is_home_page()
			},
			options: function options() {
				var options = [];
				if (this.can_pin) {
					if (this.is_pinned) {
						options.push({
							'label': __('Unpin'),
							'action': this.toggle_pin
						});
					} else {
						options.push({
							'label': __('Pin Globally'),
							'action': this.toggle_pin
						});
					}
				}
				if (this.is_user_post_owner) {
					options.push({
						'label': __('Delete'),
						'action': this.delete_post
					});
				}
				return options;
			}
		},
		created: function created() {
			var this$1 = this;

			frappe.db.get_list('Post Comment', {
				fields: ['name', 'content', 'owner', 'creation'],
				order_by: 'creation desc',
				filters: {
					parent: this.post.name
				}
			}).then(function (comments) {
				this$1.comments = comments;
			});

			if (!this.post.liked_by) {
				this.$set(this.post, 'liked_by', '');
			}

			frappe.realtime.on('new_post_comment' + this.post.name, function (comment) {
				this$1.comments = [comment].concat(this$1.comments);
			});
			frappe.realtime.on('update_liked_by' + this.post.name, this.update_liked_by);

			frappe.realtime.on('delete_post' + this.post.name, function () {
				this$1.$emit('delete-post');
			});

			this.$root.$on('user_image_updated', function () {
				this$1.user_avatar = frappe.avatar(this$1.post.owner, 'avatar-medium');
			});

		},
		mounted: function mounted() {
			var this$1 = this;

			this.$refs['content'].querySelectorAll('img').forEach(function (img) {
				img.addEventListener('click', function () {
					this$1.$root.$emit('show_preview', img.src);
				});
			});

			this.$refs['content'].querySelectorAll('a').forEach(function (link_element) {
				// to open link in new tab
				link_element.target = 'blank';
				this$1.generate_preview(link_element);
			});
		},
		methods: {
			goto_profile: function goto_profile(user) {
				frappe.set_route('social', 'profile/' + user);
			},
			toggle_comment: function toggle_comment() {
				this.show_comments = !this.show_comments;
			},
			update_liked_by: function update_liked_by(liked_by) {
				this.post.liked_by = liked_by;
			},
			toggle_like: function toggle_like() {
				frappe.xcall('frappe.social.doctype.post.post.toggle_like', {
					post_name: this.post.name,
				});
			},
			toggle_pin: function toggle_pin() {
				var this$1 = this;

				if (this.is_globally_pinnable) {
					frappe.db.set_value('Post', this.post.name, 'is_globally_pinned', cint(!this.is_pinned))
						.then(function (res) { return this$1.post.is_globally_pinned = cint(res.message.is_globally_pinned); });
				}
				if (this.is_pinnable) {
					frappe.db.set_value('Post', this.post.name, 'is_pinned', cint(!this.is_pinned))
						.then(function (res) { return this$1.post.is_pinned = cint(res.message.is_pinned); });
				}
			},
			create_comment: function create_comment(content) {
				var comment = frappe.model.get_new_doc('Post Comment');
				comment.content = content;
				comment.parent = this.post.name;
				frappe.db.insert(comment);
			},
			delete_post: function delete_post() {
				var this$1 = this;

				frappe.confirm(__("Are you sure you want to delete this post?"), function () {
					frappe.dom.freeze();
					frappe.xcall('frappe.social.doctype.post.post.delete_post', {
						'post_name': this$1.post.name
					}).then(frappe.dom.unfreeze);
				});
			},
			update_seen: function update_seen() {
				var this$1 = this;

				frappe.xcall('frappe.social.doctype.post.post.set_seen', {
					post_name: this.post.name
				}).then(function () { return this$1.post.seen = true; });
			},
			generate_preview: function generate_preview(link_element) {
				// TODO: move the code to separate component
				frappe.xcall('frappe.social.doctype.post.post.get_link_info', {
					'url': link_element.href
				}).then(function (info) {
					var title = frappe.ellipsis(info['og:title'] || info['title'], 60);
					var description = frappe.ellipsis(info['og:description'] || info['description'], 280);
					var image = info['og:image'];
					var url = info['og:url'];

					if (title) {
						link_element.insertAdjacentHTML('afterend', ("\n\t\t\t\t\t\t<a href=\"" + url + "\" target=\"blank\" class=\"preview-card\" class=\"flex\">\n\t\t\t\t\t\t\t<img src=\"" + image + "\"/>\n\t\t\t\t\t\t\t<div class=\"flex-column\">\n\t\t\t\t\t\t\t\t<h5>" + title + "</h5>\n\t\t\t\t\t\t\t\t<p class=\"text-muted\">" + description + "</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t") );
					}
				})
				.catch(console.error);
			}
		}
	};

	/* script */
	            var __vue_script__$3 = script$3;
	            
	/* template */
	var __vue_render__$3 = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    { staticClass: "post-card" },
	    [
	      _c(
	        "div",
	        { staticClass: "post-body", class: { "pinned ": _vm.is_pinned } },
	        [
	          _c(
	            "div",
	            { staticClass: "pull-right flex" },
	            [
	              _vm.is_pinned
	                ? _c("div", { staticClass: "pin-option" }, [
	                    _vm._v("\n\t\t\t\tGlobally Pinned\n\t\t\t")
	                  ])
	                : _vm._e(),
	              _vm._v(" "),
	              _vm.options.length
	                ? _c("post-dropdown-menu", {
	                    staticClass: "post-dropdown-menu",
	                    attrs: { options: _vm.options }
	                  })
	                : _vm._e(),
	              _vm._v(" "),
	              _c("transition", { attrs: { name: "fade" } }, [
	                !this.post.seen
	                  ? _c("span", { staticClass: "indicator blue" })
	                  : _vm._e()
	              ])
	            ],
	            1
	          ),
	          _vm._v(" "),
	          _c("div", {
	            staticClass: "user-avatar",
	            domProps: { innerHTML: _vm._s(_vm.user_avatar) },
	            on: {
	              click: function($event) {
	                return _vm.goto_profile(_vm.post.owner)
	              }
	            }
	          }),
	          _vm._v(" "),
	          _c(
	            "a",
	            {
	              staticClass: "user-name",
	              on: {
	                click: function($event) {
	                  return _vm.goto_profile(_vm.post.owner)
	                }
	              }
	            },
	            [_vm._v(_vm._s(_vm.user_name))]
	          ),
	          _vm._v(" "),
	          _c("div", {
	            staticClass: "text-muted",
	            domProps: { innerHTML: _vm._s(_vm.post_time) }
	          }),
	          _vm._v(" "),
	          _c("div", {
	            ref: "content",
	            staticClass: "content",
	            domProps: { innerHTML: _vm._s(_vm.post.content) }
	          })
	        ]
	      ),
	      _vm._v(" "),
	      _c("post-action", {
	        attrs: {
	          liked_by: _vm.post.liked_by,
	          comment_count: _vm.comments.length
	        },
	        on: { toggle_comment: _vm.toggle_comment, toggle_like: _vm.toggle_like }
	      }),
	      _vm._v(" "),
	      _vm.show_comments
	        ? _c("post-comment", {
	            staticClass: "post-comments",
	            attrs: { comments: _vm.comments },
	            on: { create_comment: _vm.create_comment }
	          })
	        : _vm._e()
	    ],
	    1
	  )
	};
	var __vue_staticRenderFns__$3 = [];
	__vue_render__$3._withStripped = true;

	  /* style */
	  var __vue_inject_styles__$3 = function (inject) {
	    if (!inject) { return }
	    inject("data-v-38fa4aab_0", { source: ".post-comments[data-v-38fa4aab] {\n  padding: 15px 46px;\n  padding-top: 0px;\n  background: #F6F6F6;\n}\n.indicator[data-v-38fa4aab] {\n  margin-left: 15px;\n}\n.fade-enter-active[data-v-38fa4aab],\n.fade-leave-active[data-v-38fa4aab] {\n  transition: opacity 0.8s;\n}\n.fade-enter[data-v-38fa4aab],\n.fade-leave-to[data-v-38fa4aab] {\n  opacity: 0;\n}\n", map: {"version":3,"sources":["Post.vue"],"names":[],"mappings":"AAAA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,mBAAmB;AACrB;AACA;EACE,iBAAiB;AACnB;AACA;;EAEE,wBAAwB;AAC1B;AACA;;EAEE,UAAU;AACZ","file":"Post.vue","sourcesContent":[".post-comments {\n  padding: 15px 46px;\n  padding-top: 0px;\n  background: #F6F6F6;\n}\n.indicator {\n  margin-left: 15px;\n}\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.8s;\n}\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n"]}, media: undefined });

	  };
	  /* scoped */
	  var __vue_scope_id__$3 = "data-v-38fa4aab";
	  /* module identifier */
	  var __vue_module_identifier__$3 = undefined;
	  /* functional template */
	  var __vue_is_functional_template__$3 = false;
	  /* component normalizer */
	  function __vue_normalize__$3(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/components/Post.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    {
	      var hook;
	      if (style) {
	        hook = function(context) {
	          style.call(this, createInjector(context));
	        };
	      }

	      if (hook !== undefined) {
	        if (component.functional) {
	          // register for functional component in vue file
	          var originalRender = component.render;
	          component.render = function renderWithStyleInjection(h, context) {
	            hook.call(context);
	            return originalRender(h, context)
	          };
	        } else {
	          // inject component registration as beforeCreate hook
	          var existing = component.beforeCreate;
	          component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
	        }
	      }
	    }

	    return component
	  }
	  /* style inject */
	  function __vue_create_injector__$3() {
	    var head = document.head || document.getElementsByTagName('head')[0];
	    var styles = __vue_create_injector__$3.styles || (__vue_create_injector__$3.styles = {});
	    var isOldIE =
	      typeof navigator !== 'undefined' &&
	      /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

	    return function addStyle(id, css) {
	      if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

	      var group = isOldIE ? css.media || 'default' : id;
	      var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

	      if (!style.ids.includes(id)) {
	        var code = css.source;
	        var index = style.ids.length;

	        style.ids.push(id);

	        if (isOldIE) {
	          style.element = style.element || document.querySelector('style[data-group=' + group + ']');
	        }

	        if (!style.element) {
	          var el = style.element = document.createElement('style');
	          el.type = 'text/css';

	          if (css.media) { el.setAttribute('media', css.media); }
	          if (isOldIE) {
	            el.setAttribute('data-group', group);
	            el.setAttribute('data-next-index', '0');
	          }

	          head.appendChild(el);
	        }

	        if (isOldIE) {
	          index = parseInt(style.element.getAttribute('data-next-index'));
	          style.element.setAttribute('data-next-index', index + 1);
	        }

	        if (style.element.styleSheet) {
	          style.parts.push(code);
	          style.element.styleSheet.cssText = style.parts
	            .filter(Boolean)
	            .join('\n');
	        } else {
	          var textNode = document.createTextNode(code);
	          var nodes = style.element.childNodes;
	          if (nodes[index]) { style.element.removeChild(nodes[index]); }
	          if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
	          else { style.element.appendChild(textNode); }
	        }
	      }
	    }
	  }
	  /* style inject SSR */
	  

	  
	  var Post = __vue_normalize__$3(
	    { render: __vue_render__$3, staticRenderFns: __vue_staticRenderFns__$3 },
	    __vue_inject_styles__$3,
	    __vue_script__$3,
	    __vue_scope_id__$3,
	    __vue_is_functional_template__$3,
	    __vue_module_identifier__$3,
	    __vue_create_injector__$3,
	    undefined
	  );

	/* script */

	/* template */
	var __vue_render__$4 = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _vm._m(0)
	};
	var __vue_staticRenderFns__$4 = [
	  function() {
	    var _vm = this;
	    var _h = _vm.$createElement;
	    var _c = _vm._self._c || _h;
	    return _c(
	      "div",
	      { staticClass: "post-skeleton flex-column justify-between" },
	      [
	        _c("div", { staticClass: "post-skeleton-body" }, [
	          _c("div", { staticClass: "flex" }, [
	            _c("div", { staticClass: "avatar avatar-medium" }),
	            _vm._v(" "),
	            _c("div", { staticClass: "user-name" })
	          ]),
	          _vm._v(" "),
	          _c("div", { staticClass: "content" })
	        ]),
	        _vm._v(" "),
	        _c("div", { staticClass: "post-skeleton-foot" })
	      ]
	    )
	  }
	];
	__vue_render__$4._withStripped = true;

	  /* style */
	  var __vue_inject_styles__$4 = function (inject) {
	    if (!inject) { return }
	    inject("data-v-22a249bb_0", { source: "@keyframes load-data-v-22a249bb {\n0% {\n    background-position: -100px;\n}\n40%,\n  100% {\n    background-position: 500px;\n}\n}\n.post-skeleton[data-v-22a249bb] {\n  height: 250px;\n  border-radius: 4px;\n  max-width: 600px;\n  border: 1px solid #ededed;\n  margin-bottom: 15px;\n}\n.post-skeleton .post-skeleton-body[data-v-22a249bb] {\n  padding: 15px;\n}\n.post-skeleton .post-skeleton-body .user-name[data-v-22a249bb] {\n  height: 10px;\n  width: 100px;\n  margin-left: 5px;\n}\n.post-skeleton .post-skeleton-body .content[data-v-22a249bb] {\n  height: 100px;\n  margin: 15px 0 0 46px;\n}\n.post-skeleton .post-skeleton-body .user-name[data-v-22a249bb],\n.post-skeleton .post-skeleton-body .avatar[data-v-22a249bb],\n.post-skeleton .post-skeleton-body .content[data-v-22a249bb] {\n  background-image: linear-gradient(90deg, #f8f8f8 0px, #fcfcfc 40px, #f8f8f8 80px);\n  background-size: 600px;\n  border-radius: 4px;\n  animation: load-data-v-22a249bb 3s infinite linear;\n}\n.post-skeleton .post-skeleton-foot[data-v-22a249bb] {\n  width: 100%;\n  height: 40px;\n  background: #f8f8f8;\n}\n", map: {"version":3,"sources":["PostSkeleton.vue","/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/components/PostSkeleton.vue"],"names":[],"mappings":"AAAA;AACE;IACE,2BAA2B;AAC7B;AACA;;IAEE,0BAA0B;AAC5B;AACF;AACA;EACE,aAAa;EACb,kBAAkB;EAClB,gBAAgB;ECClB,yBAAA;EACA,mBAAA;AACA;ADCA;ECCA,aAAA;AACA;AACA;EACA,YAAA;EDCE,YAAY;ECCd,gBAAA;AACA;AACA;EACA,aAAA;EDCE,qBAAqB;ACCvB;AACA;;;EAGA,iFAAA;EACA,sBAAA;EACA,kBAAA;EACA,kDAAA;AACA;AACA;EACA,WAAA;EACA,YAAA;EACA,mBAAA;AACA","file":"PostSkeleton.vue","sourcesContent":["@keyframes load {\n  0% {\n    background-position: -100px;\n  }\n  40%,\n  100% {\n    background-position: 500px;\n  }\n}\n.post-skeleton {\n  height: 250px;\n  border-radius: 4px;\n  max-width: 600px;\n  border: 1px solid #ededed;\n  margin-bottom: 15px;\n}\n.post-skeleton .post-skeleton-body {\n  padding: 15px;\n}\n.post-skeleton .post-skeleton-body .user-name {\n  height: 10px;\n  width: 100px;\n  margin-left: 5px;\n}\n.post-skeleton .post-skeleton-body .content {\n  height: 100px;\n  margin: 15px 0 0 46px;\n}\n.post-skeleton .post-skeleton-body .user-name,\n.post-skeleton .post-skeleton-body .avatar,\n.post-skeleton .post-skeleton-body .content {\n  background-image: linear-gradient(90deg, #f8f8f8 0px, #fcfcfc 40px, #f8f8f8 80px);\n  background-size: 600px;\n  border-radius: 4px;\n  animation: load 3s infinite linear;\n}\n.post-skeleton .post-skeleton-foot {\n  width: 100%;\n  height: 40px;\n  background: #f8f8f8;\n}\n","<template>\n\t<div class=\"post-skeleton flex-column justify-between\">\n\t\t<div class=\"post-skeleton-body\">\n\t\t\t<div class=\"flex\">\n\t\t\t\t<div class=\"avatar avatar-medium\"></div>\n\t\t\t\t<div class=\"user-name\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"content\"></div>\n\t\t</div>\n\t\t<div class=\"post-skeleton-foot\"></div>\n\t</div>\n</template>\n<style lang=\"less\" scoped>\n@base-color: #f8f8f8;\n@shine-color: #fcfcfc;\n@animation-duration: 3s;\n\n@keyframes load {\n\t0% {\n\t\tbackground-position: -100px\n\t}\n\n\t40%, 100% {\n\t\tbackground-position: 500px\n\t}\n}\n\n.background-img() {\n\tbackground-image: linear-gradient(90deg, @base-color 0px, @shine-color 40px, @base-color 80px);\n\tbackground-size: 600px\n}\n.post-skeleton {\n\theight: 250px;\n\tborder-radius: 4px;\n\tmax-width: 600px;\n\tborder: 1px solid #ededed;\n\tmargin-bottom: 15px;\n\t.post-skeleton-body {\n\t\tpadding: 15px;\n\t\t.user-name {\n\t\t\theight: 10px;\n\t\t\twidth: 100px;\n\t\t\tmargin-left: 5px;\n\t\t}\n\t\t.content {\n\t\t\theight: 100px;\n\t\t\tmargin: 15px 0 0 46px;\n\t\t}\n\t\t.user-name, .avatar, .content {\n\t\t\t.background-img();\n\t\t\tborder-radius: 4px;\n\t\t\tanimation: load @animation-duration infinite linear;\n\t\t}\n\t}\n\t.post-skeleton-foot {\n\t\twidth: 100%;\n\t\theight: 40px;\n\t\tbackground: @base-color;\n\t}\n}\n</style>"]}, media: undefined });

	  };
	  /* scoped */
	  var __vue_scope_id__$4 = "data-v-22a249bb";
	  /* module identifier */
	  var __vue_module_identifier__$4 = undefined;
	  /* functional template */
	  var __vue_is_functional_template__$4 = false;
	  /* component normalizer */
	  function __vue_normalize__$4(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/components/PostSkeleton.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    {
	      var hook;
	      if (style) {
	        hook = function(context) {
	          style.call(this, createInjector(context));
	        };
	      }

	      if (hook !== undefined) {
	        if (component.functional) {
	          // register for functional component in vue file
	          var originalRender = component.render;
	          component.render = function renderWithStyleInjection(h, context) {
	            hook.call(context);
	            return originalRender(h, context)
	          };
	        } else {
	          // inject component registration as beforeCreate hook
	          var existing = component.beforeCreate;
	          component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
	        }
	      }
	    }

	    return component
	  }
	  /* style inject */
	  function __vue_create_injector__$4() {
	    var head = document.head || document.getElementsByTagName('head')[0];
	    var styles = __vue_create_injector__$4.styles || (__vue_create_injector__$4.styles = {});
	    var isOldIE =
	      typeof navigator !== 'undefined' &&
	      /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

	    return function addStyle(id, css) {
	      if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

	      var group = isOldIE ? css.media || 'default' : id;
	      var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

	      if (!style.ids.includes(id)) {
	        var code = css.source;
	        var index = style.ids.length;

	        style.ids.push(id);

	        if (isOldIE) {
	          style.element = style.element || document.querySelector('style[data-group=' + group + ']');
	        }

	        if (!style.element) {
	          var el = style.element = document.createElement('style');
	          el.type = 'text/css';

	          if (css.media) { el.setAttribute('media', css.media); }
	          if (isOldIE) {
	            el.setAttribute('data-group', group);
	            el.setAttribute('data-next-index', '0');
	          }

	          head.appendChild(el);
	        }

	        if (isOldIE) {
	          index = parseInt(style.element.getAttribute('data-next-index'));
	          style.element.setAttribute('data-next-index', index + 1);
	        }

	        if (style.element.styleSheet) {
	          style.parts.push(code);
	          style.element.styleSheet.cssText = style.parts
	            .filter(Boolean)
	            .join('\n');
	        } else {
	          var textNode = document.createTextNode(code);
	          var nodes = style.element.childNodes;
	          if (nodes[index]) { style.element.removeChild(nodes[index]); }
	          if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
	          else { style.element.appendChild(textNode); }
	        }
	      }
	    }
	  }
	  /* style inject SSR */
	  

	  
	  var PostSkeleton = __vue_normalize__$4(
	    { render: __vue_render__$4, staticRenderFns: __vue_staticRenderFns__$4 },
	    __vue_inject_styles__$4,
	    {},
	    __vue_scope_id__$4,
	    __vue_is_functional_template__$4,
	    __vue_module_identifier__$4,
	    __vue_create_injector__$4,
	    undefined
	  );

	//

	var script$4 = {
		props: ['post_list_filter'],
		components: {
			Post: Post,
			PostSkeleton: PostSkeleton
		},
		data: function data() {
			return {
				posts: [],
				more_posts_available: true,
				loading_posts: false,
				load_new: false
			}
		},
		created: function created() {
			var this$1 = this;

			window.addEventListener('scroll', this.handle_scroll);
			this.update_posts();
			this.$parent.$on('load_new_posts', function () {
				this$1.update_posts();
			});
			frappe.realtime.on('global_pin', function () {
				this$1.update_posts();
			});
		},
		watch: {
			post_list_filter: function post_list_filter(old_val, new_val) {
				if (JSON.stringify(old_val) !== JSON.stringify(new_val)){
					this.update_posts();
				}
			}
		},
		methods: {
			get_posts: function get_posts(filters, load_old) {
				return frappe.xcall('frappe.social.doctype.post.post.get_posts', {
					filters: filters,
					limit_start: load_old ? this.posts.length : 0
				})
			},
			update_posts: function update_posts(load_old) {
				var this$1 = this;
				if ( load_old === void 0 ) load_old = false;

				if (!this.post_list_filter) { return }
				this.loading_posts = true;

				var filters = Object.assign({}, this.post_list_filter);

				this.get_posts(filters, load_old).then(function (res) {
					if (load_old) {
						if (!res.length) {
							this$1.more_posts_available = false;
						}
						this$1.posts = this$1.posts.concat(res);
					} else {
						this$1.posts = res;
					}
				}).finally(function () {
					this$1.loading_posts = false;
					this$1.track_seen();
				});
			},
			handle_scroll: frappe.utils.debounce(function() {
				this.track_seen();
				var screen_bottom = document.documentElement.scrollTop + window.innerHeight === document.documentElement.offsetHeight;
				if (screen_bottom && this.more_posts_available) {
					if (!this.loading_posts) {
						this.update_posts(true);
					}
				}
			}, 500),
			track_seen: function track_seen() {
				var posts = this.$refs.posts || [];
				posts.forEach(function (post_component) {
					if(!post_component.post.seen
					 && frappe.dom.is_element_in_viewport(post_component.$el, 50)) {
						post_component.update_seen();
					}
				});
			},
			delete_post: function delete_post(index) {
				this.posts.splice(index, 1);
			},
		},
		destroyed: function destroyed() {
			window.removeEventListener('scroll', this.handle_scroll);
		}
	};

	/* script */
	            var __vue_script__$4 = script$4;
	            
	/* template */
	var __vue_render__$5 = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    [
	      _vm.loading_posts && !_vm.posts.length
	        ? _c(
	            "div",
	            _vm._l(5, function(index) {
	              return _c("post-skeleton", { key: index })
	            }),
	            1
	          )
	        : _vm._e(),
	      _vm._v(" "),
	      _c(
	        "transition-group",
	        { attrs: { name: "flip-list" } },
	        _vm._l(_vm.posts, function(post, index) {
	          return _c("post", {
	            key: post.name,
	            ref: "posts",
	            refInFor: true,
	            attrs: { post: post },
	            on: {
	              "delete-post": function($event) {
	                return _vm.delete_post(index)
	              }
	            }
	          })
	        }),
	        1
	      ),
	      _vm._v(" "),
	      !_vm.loading_posts && !_vm.posts.length
	        ? _c("div", { staticClass: "no-post-message text-muted" }, [
	            _vm._v("\n\t\t" + _vm._s(_vm.__("No posts yet")) + "\n\t")
	          ])
	        : _vm._e(),
	      _vm._v(" "),
	      _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value: _vm.loading_posts && _vm.posts.length,
	              expression: "loading_posts && posts.length"
	            }
	          ],
	          staticClass: "text-center text-muted padding"
	        },
	        [_vm._v("\n\t\t" + _vm._s(_vm.__("Fetching posts...")) + "\n\t")]
	      ),
	      _vm._v(" "),
	      _c(
	        "div",
	        {
	          directives: [
	            {
	              name: "show",
	              rawName: "v-show",
	              value:
	                _vm.posts.length &&
	                !_vm.loading_posts &&
	                !_vm.more_posts_available,
	              expression:
	                "posts.length && !loading_posts && !more_posts_available"
	            }
	          ],
	          staticClass: "text-center text-muted padding"
	        },
	        [_vm._v("\n\t\t" + _vm._s(_vm.__("No more posts")) + "\n\t")]
	      )
	    ],
	    1
	  )
	};
	var __vue_staticRenderFns__$5 = [];
	__vue_render__$5._withStripped = true;

	  /* style */
	  var __vue_inject_styles__$5 = function (inject) {
	    if (!inject) { return }
	    inject("data-v-e62b9840_0", { source: ".no-post-message[data-v-e62b9840] {\n  height: 200px;\n  text-align: center;\n  vertical-align: middle;\n  line-height: 200px;\n}\n.flip-list-move[data-v-e62b9840],\n.flip-list-to[data-v-e62b9840] {\n  transition: transform 0.3s;\n}\n", map: {"version":3,"sources":["PostLoader.vue"],"names":[],"mappings":"AAAA;EACE,aAAa;EACb,kBAAkB;EAClB,sBAAsB;EACtB,kBAAkB;AACpB;AACA;;EAEE,0BAA0B;AAC5B","file":"PostLoader.vue","sourcesContent":[".no-post-message {\n  height: 200px;\n  text-align: center;\n  vertical-align: middle;\n  line-height: 200px;\n}\n.flip-list-move,\n.flip-list-to {\n  transition: transform 0.3s;\n}\n"]}, media: undefined });

	  };
	  /* scoped */
	  var __vue_scope_id__$5 = "data-v-e62b9840";
	  /* module identifier */
	  var __vue_module_identifier__$5 = undefined;
	  /* functional template */
	  var __vue_is_functional_template__$5 = false;
	  /* component normalizer */
	  function __vue_normalize__$5(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/components/PostLoader.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    {
	      var hook;
	      if (style) {
	        hook = function(context) {
	          style.call(this, createInjector(context));
	        };
	      }

	      if (hook !== undefined) {
	        if (component.functional) {
	          // register for functional component in vue file
	          var originalRender = component.render;
	          component.render = function renderWithStyleInjection(h, context) {
	            hook.call(context);
	            return originalRender(h, context)
	          };
	        } else {
	          // inject component registration as beforeCreate hook
	          var existing = component.beforeCreate;
	          component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
	        }
	      }
	    }

	    return component
	  }
	  /* style inject */
	  function __vue_create_injector__$5() {
	    var head = document.head || document.getElementsByTagName('head')[0];
	    var styles = __vue_create_injector__$5.styles || (__vue_create_injector__$5.styles = {});
	    var isOldIE =
	      typeof navigator !== 'undefined' &&
	      /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

	    return function addStyle(id, css) {
	      if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

	      var group = isOldIE ? css.media || 'default' : id;
	      var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

	      if (!style.ids.includes(id)) {
	        var code = css.source;
	        var index = style.ids.length;

	        style.ids.push(id);

	        if (isOldIE) {
	          style.element = style.element || document.querySelector('style[data-group=' + group + ']');
	        }

	        if (!style.element) {
	          var el = style.element = document.createElement('style');
	          el.type = 'text/css';

	          if (css.media) { el.setAttribute('media', css.media); }
	          if (isOldIE) {
	            el.setAttribute('data-group', group);
	            el.setAttribute('data-next-index', '0');
	          }

	          head.appendChild(el);
	        }

	        if (isOldIE) {
	          index = parseInt(style.element.getAttribute('data-next-index'));
	          style.element.setAttribute('data-next-index', index + 1);
	        }

	        if (style.element.styleSheet) {
	          style.parts.push(code);
	          style.element.styleSheet.cssText = style.parts
	            .filter(Boolean)
	            .join('\n');
	        } else {
	          var textNode = document.createTextNode(code);
	          var nodes = style.element.childNodes;
	          if (nodes[index]) { style.element.removeChild(nodes[index]); }
	          if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
	          else { style.element.appendChild(textNode); }
	        }
	      }
	    }
	  }
	  /* style inject SSR */
	  

	  
	  var PostLoader = __vue_normalize__$5(
	    { render: __vue_render__$5, staticRenderFns: __vue_staticRenderFns__$5 },
	    __vue_inject_styles__$5,
	    __vue_script__$4,
	    __vue_scope_id__$5,
	    __vue_is_functional_template__$5,
	    __vue_module_identifier__$5,
	    __vue_create_injector__$5,
	    undefined
	  );

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var script$5 = {
		data: function data() {
			return {
				frequently_visited_list: [],
			}
		},
		created: function created() {
			this.set_frequently_visited_list();
		},
		methods: {
			goto_list: function goto_list(route) {
				frappe.set_route(route);
			},
			set_frequently_visited_list: function set_frequently_visited_list() {
				var this$1 = this;

				frappe.xcall('frappe.social.doctype.post.post.frequently_visited_links')
					.then(function (data) {
						this$1.frequently_visited_list = data;
					});
			},
			get_label: function get_label(route) {
				return frappe.utils.get_route_label(route);
			},
			go_to_profile_page: function go_to_profile_page() {
				frappe.set_route('social', 'profile', frappe.session.user);
			},
			go_to_user_list: function go_to_user_list() {
				frappe.set_route('social', 'users');
			}
		}
	};

	/* script */
	            var __vue_script__$5 = script$5;
	            
	/* template */
	var __vue_render__$6 = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", { staticClass: "flex flex-column" }, [
	    _c(
	      "a",
	      {
	        staticClass: "leaderboard-link",
	        on: {
	          click: function($event) {
	            $event.preventDefault();
	            return _vm.go_to_user_list()
	          }
	        }
	      },
	      [_vm._v("\n\t\t" + _vm._s(_vm.__("Leaderboard")) + "\n\t")]
	    ),
	    _vm._v(" "),
	    _vm.frequently_visited_list.length
	      ? _c("div", { staticClass: "links" }, [
	          _c("div", { staticClass: "muted-title" }, [
	            _vm._v(
	              "\n\t\t\t" + _vm._s(_vm.__("Frequently Visited Links")) + "\n\t\t"
	            )
	          ]),
	          _vm._v(" "),
	          _c(
	            "div",
	            { staticClass: "flex flex-column" },
	            _vm._l(_vm.frequently_visited_list, function(route_obj) {
	              return _c(
	                "a",
	                {
	                  key: route_obj.route,
	                  staticClass: "route-link",
	                  on: {
	                    click: function($event) {
	                      $event.preventDefault();
	                      return _vm.goto_list(route_obj.route)
	                    }
	                  }
	                },
	                [
	                  _vm._v(
	                    "\n\t\t\t\t" +
	                      _vm._s(_vm.get_label(route_obj.route)) +
	                      "\n\t\t\t"
	                  )
	                ]
	              )
	            }),
	            0
	          )
	        ])
	      : _vm._e()
	  ])
	};
	var __vue_staticRenderFns__$6 = [];
	__vue_render__$6._withStripped = true;

	  /* style */
	  var __vue_inject_styles__$6 = function (inject) {
	    if (!inject) { return }
	    inject("data-v-56818749_0", { source: ".route-link[data-v-56818749] {\n  margin: 0px 10px 10px 0;\n  text-transform: capitalize;\n}\n.leaderboard-link[data-v-56818749] {\n  margin: 0px 10px 10px 0;\n  text-transform: capitalize;\n  margin-bottom: 15px;\n}\n.stats[data-v-56818749] {\n  min-height: 150px;\n}\n.user-details .user-avatar[data-v-56818749] .avatar-xl {\n  height: 150px;\n  width: 150px;\n}\n.user-details .user_name[data-v-56818749] {\n  display: block;\n  margin-top: 10px;\n  font-size: 2rem;\n  font-weight: 600;\n}\n", map: {"version":3,"sources":["PostSidebar.vue"],"names":[],"mappings":"AAAA;EACE,uBAAuB;EACvB,0BAA0B;AAC5B;AACA;EACE,uBAAuB;EACvB,0BAA0B;EAC1B,mBAAmB;AACrB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,aAAa;EACb,YAAY;AACd;AACA;EACE,cAAc;EACd,gBAAgB;EAChB,eAAe;EACf,gBAAgB;AAClB","file":"PostSidebar.vue","sourcesContent":[".route-link {\n  margin: 0px 10px 10px 0;\n  text-transform: capitalize;\n}\n.leaderboard-link {\n  margin: 0px 10px 10px 0;\n  text-transform: capitalize;\n  margin-bottom: 15px;\n}\n.stats {\n  min-height: 150px;\n}\n.user-details .user-avatar /deep/ .avatar-xl {\n  height: 150px;\n  width: 150px;\n}\n.user-details .user_name {\n  display: block;\n  margin-top: 10px;\n  font-size: 2rem;\n  font-weight: 600;\n}\n"]}, media: undefined });

	  };
	  /* scoped */
	  var __vue_scope_id__$6 = "data-v-56818749";
	  /* module identifier */
	  var __vue_module_identifier__$6 = undefined;
	  /* functional template */
	  var __vue_is_functional_template__$6 = false;
	  /* component normalizer */
	  function __vue_normalize__$6(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/components/PostSidebar.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    {
	      var hook;
	      if (style) {
	        hook = function(context) {
	          style.call(this, createInjector(context));
	        };
	      }

	      if (hook !== undefined) {
	        if (component.functional) {
	          // register for functional component in vue file
	          var originalRender = component.render;
	          component.render = function renderWithStyleInjection(h, context) {
	            hook.call(context);
	            return originalRender(h, context)
	          };
	        } else {
	          // inject component registration as beforeCreate hook
	          var existing = component.beforeCreate;
	          component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
	        }
	      }
	    }

	    return component
	  }
	  /* style inject */
	  function __vue_create_injector__$6() {
	    var head = document.head || document.getElementsByTagName('head')[0];
	    var styles = __vue_create_injector__$6.styles || (__vue_create_injector__$6.styles = {});
	    var isOldIE =
	      typeof navigator !== 'undefined' &&
	      /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

	    return function addStyle(id, css) {
	      if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

	      var group = isOldIE ? css.media || 'default' : id;
	      var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

	      if (!style.ids.includes(id)) {
	        var code = css.source;
	        var index = style.ids.length;

	        style.ids.push(id);

	        if (isOldIE) {
	          style.element = style.element || document.querySelector('style[data-group=' + group + ']');
	        }

	        if (!style.element) {
	          var el = style.element = document.createElement('style');
	          el.type = 'text/css';

	          if (css.media) { el.setAttribute('media', css.media); }
	          if (isOldIE) {
	            el.setAttribute('data-group', group);
	            el.setAttribute('data-next-index', '0');
	          }

	          head.appendChild(el);
	        }

	        if (isOldIE) {
	          index = parseInt(style.element.getAttribute('data-next-index'));
	          style.element.setAttribute('data-next-index', index + 1);
	        }

	        if (style.element.styleSheet) {
	          style.parts.push(code);
	          style.element.styleSheet.cssText = style.parts
	            .filter(Boolean)
	            .join('\n');
	        } else {
	          var textNode = document.createTextNode(code);
	          var nodes = style.element.childNodes;
	          if (nodes[index]) { style.element.removeChild(nodes[index]); }
	          if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
	          else { style.element.appendChild(textNode); }
	        }
	      }
	    }
	  }
	  /* style inject SSR */
	  

	  
	  var PostSidebar = __vue_normalize__$6(
	    { render: __vue_render__$6, staticRenderFns: __vue_staticRenderFns__$6 },
	    __vue_inject_styles__$6,
	    __vue_script__$5,
	    __vue_scope_id__$6,
	    __vue_is_functional_template__$6,
	    __vue_module_identifier__$6,
	    __vue_create_injector__$6,
	    undefined
	  );

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var script$6 = {
		data: function data() {
			return {
				'events': []
			}
		},
		created: function created() {
			var this$1 = this;

			this.get_events().then(function (events) {
				this$1.events = events;
			});
		},
		methods: {
			get_events: function get_events() {
				var today = frappe.datetime.now_date();
				return frappe.xcall('frappe.desk.doctype.event.event.get_events', {
					start: today,
					end: today
				})
			},
			open_chat: function open_chat() {
				setTimeout(frappe.chat.widget.toggle);
			},
			get_time: function get_time(timestamp) {
				return frappe.datetime.get_time(timestamp)
			},
			open_event: function open_event(event) {
				frappe.set_route('Form', 'Event', event.name);
			}
		}
	};

	/* script */
	            var __vue_script__$6 = script$6;
	            
	/* template */
	var __vue_render__$7 = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    [
	      _c("div", { staticClass: "muted-title" }, [
	        _vm._v(_vm._s(_vm.__("Upcoming Events")))
	      ]),
	      _vm._v(" "),
	      _vm._l(_vm.events, function(event) {
	        return _c("div", { key: event.name, staticClass: "event" }, [
	          _c("span", { staticClass: "bold" }, [
	            _vm._v(_vm._s(_vm.get_time(event.starts_on)))
	          ]),
	          _vm._v(" "),
	          _c(
	            "a",
	            {
	              on: {
	                click: function($event) {
	                  return _vm.open_event(event)
	                }
	              }
	            },
	            [_vm._v(" " + _vm._s(event.subject))]
	          )
	        ])
	      }),
	      _vm._v(" "),
	      !_vm.events.length
	        ? _c("div", { staticClass: "event" }, [
	            _vm._v("\n\t\t" + _vm._s(_vm.__("No Upcoming Events")) + "\n\t")
	          ])
	        : _vm._e(),
	      _vm._v(" "),
	      _c("div", { staticClass: "muted-title" }, [
	        _vm._v(_vm._s(_vm.__("Chat")))
	      ]),
	      _vm._v(" "),
	      _c("a", { on: { click: _vm.open_chat } }, [
	        _vm._v("\n\t\t" + _vm._s(_vm.__("Open Chat")) + "\n\t")
	      ])
	    ],
	    2
	  )
	};
	var __vue_staticRenderFns__$7 = [];
	__vue_render__$7._withStripped = true;

	  /* style */
	  var __vue_inject_styles__$7 = undefined;
	  /* scoped */
	  var __vue_scope_id__$7 = undefined;
	  /* module identifier */
	  var __vue_module_identifier__$7 = undefined;
	  /* functional template */
	  var __vue_is_functional_template__$7 = false;
	  /* component normalizer */
	  function __vue_normalize__$7(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/components/ActivitySidebar.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    return component
	  }
	  /* style inject */
	  
	  /* style inject SSR */
	  

	  
	  var ActivitySidebar = __vue_normalize__$7(
	    { render: __vue_render__$7, staticRenderFns: __vue_staticRenderFns__$7 },
	    __vue_inject_styles__$7,
	    __vue_script__$6,
	    __vue_scope_id__$7,
	    __vue_is_functional_template__$7,
	    __vue_module_identifier__$7,
	    undefined,
	    undefined
	  );

	//

	var script$7 = {
		components: {
			PostLoader: PostLoader,
			PostSidebar: PostSidebar,
			ActivitySidebar: ActivitySidebar
		},
		data: function data() {
			return {
				'posts': [],
				'events': [],
				'new_posts_count': 0,
			}
		},
		created: function created() {
			var this$1 = this;

			frappe.realtime.on('new_post', function (post_owner) {
				if (post_owner === frappe.session.user) {
					this$1.load_new_posts();
				} else {
					this$1.new_posts_count += 1;
				}
			});
		},
		methods: {
			load_new_posts: function load_new_posts() {
				this.$emit('load_new_posts');
				this.new_posts_count = 0;
			}
		}
	};

	/* script */
	            var __vue_script__$7 = script$7;
	            
	/* template */
	var __vue_render__$8 = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    { staticClass: "wall-container" },
	    [
	      _c("post-sidebar", { staticClass: "post-sidebar hidden-xs" }),
	      _vm._v(" "),
	      _c(
	        "div",
	        { staticClass: "post-container" },
	        [
	          _c(
	            "div",
	            {
	              directives: [
	                {
	                  name: "show",
	                  rawName: "v-show",
	                  value: _vm.new_posts_count,
	                  expression: "new_posts_count"
	                }
	              ],
	              staticClass: "new_posts_count",
	              on: { click: _vm.load_new_posts }
	            },
	            [
	              _vm._v(
	                "\n\t\t\t" +
	                  _vm._s(_vm.new_posts_count + " new post") +
	                  "\n\t\t"
	              )
	            ]
	          ),
	          _vm._v(" "),
	          _c("post-loader", { attrs: { post_list_filter: {} } })
	        ],
	        1
	      ),
	      _vm._v(" "),
	      _c("activity-sidebar", { staticClass: "activity-sidebar hidden-xs" })
	    ],
	    1
	  )
	};
	var __vue_staticRenderFns__$8 = [];
	__vue_render__$8._withStripped = true;

	  /* style */
	  var __vue_inject_styles__$8 = undefined;
	  /* scoped */
	  var __vue_scope_id__$8 = undefined;
	  /* module identifier */
	  var __vue_module_identifier__$8 = undefined;
	  /* functional template */
	  var __vue_is_functional_template__$8 = false;
	  /* component normalizer */
	  function __vue_normalize__$8(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/pages/Wall.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    return component
	  }
	  /* style inject */
	  
	  /* style inject SSR */
	  

	  
	  var Wall = __vue_normalize__$8(
	    { render: __vue_render__$8, staticRenderFns: __vue_staticRenderFns__$8 },
	    __vue_inject_styles__$8,
	    __vue_script__$7,
	    __vue_scope_id__$8,
	    __vue_is_functional_template__$8,
	    __vue_module_identifier__$8,
	    undefined,
	    undefined
	  );

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var script$8 = {
		props: {
			user_id: String
		},
		data: function data() {
			return {
				user: frappe.user_info(this.user_id),
				can_edit_profile: frappe.social.is_session_user_page(),
				can_edit_user: frappe.session.user === this.user_id,
				energy_points: 0
			};
		},
		mounted: function mounted() {
			var this$1 = this;

			frappe.xcall('frappe.social.doctype.energy_point_log.energy_point_log.get_user_energy_and_review_points', {user: this.user_id}).then(function (r) {
				this$1.energy_points = r[this$1.user_id].energy_points;
			});
		},
		methods: {
			edit_user: function edit_user() {
				frappe.set_route('Form', 'User', this.user_id);
			},
			edit_profile: function edit_profile() {
				var this$1 = this;

				var edit_profile_dialog = new frappe.ui.Dialog({
					title: __('Edit Profile'),
					fields: [
						{
							fieldtype: 'Attach Image',
							fieldname: 'user_image',
							label: 'Profile Image',
						},
						{
							fieldtype: 'Data',
							fieldname: 'interest',
							label: 'Interests',
						},
						{
							fieldtype: 'Column Break'
						},
						{
							fieldtype: 'Attach Image',
							fieldname: 'banner_image',
							label: 'Banner Image',
						},
						{
							fieldtype: 'Data',
							fieldname: 'location',
							label: 'Location',
						},
						{
							fieldtype: 'Section Break',
							fieldname: 'Interest'
						},
						{
							fieldtype: 'Small Text',
							fieldname: 'bio',
							label: 'Bio',
						}
					],
					primary_action: function (values) {
						edit_profile_dialog.disable_primary_action();
						frappe
							.xcall('frappe.core.doctype.user.user.update_profile_info', {
								profile_info: values
							})
							.then(function (user) {
								user.image = user.user_image;
								var user_info = frappe.user_info(this$1.user_id);
								this$1.user = Object.assign(user_info, user);
								this$1.$root.$emit('user_image_updated');
								edit_profile_dialog.hide();
							})
							.finally(function () {
								edit_profile_dialog.enable_primary_action();
							});
					},
					primary_action_label: __('Save')
				});
				edit_profile_dialog.set_values({
					user_image: this.user.image,
					banner_image: this.user.banner_image,
					location: this.user.location,
					interest: this.user.interest,
					bio: this.user.bio
				});
				edit_profile_dialog.show();
			},
			view_energy_point_list: function view_energy_point_list(user) {
				frappe.set_route('List', 'Energy Point Log', {user:user.name});
			}
		}
	};

	/* script */
	            var __vue_script__$8 = script$8;
	            
	/* template */
	var __vue_render__$9 = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", { staticClass: "profile-sidebar flex flex-column" }, [
	    _c("div", { staticClass: "user-details" }, [
	      _c("h3", [_vm._v(_vm._s(_vm.user.fullname))]),
	      _vm._v(" "),
	      _c("p", [
	        _c(
	          "a",
	          {
	            staticClass: "text-muted",
	            on: {
	              click: function($event) {
	                return _vm.view_energy_point_list(_vm.user)
	              }
	            }
	          },
	          [
	            _vm._v(
	              "\n\t\t\t" +
	                _vm._s(_vm.__("Energy Points")) +
	                ": " +
	                _vm._s(_vm.energy_points)
	            )
	          ]
	        )
	      ]),
	      _vm._v(" "),
	      _c("p", [_vm._v(_vm._s(_vm.user.bio))]),
	      _vm._v(" "),
	      _vm.user.location
	        ? _c("div", { staticClass: "location" }, [
	            _c("span", { staticClass: "text-muted" }, [
	              _c("i", { staticClass: "fa fa-map-marker" }, [_vm._v(" ")]),
	              _vm._v("\n\t\t\t\t" + _vm._s(_vm.user.location) + "\n\t\t\t")
	            ])
	          ])
	        : _vm._e(),
	      _vm._v(" "),
	      _vm.user.interest
	        ? _c("div", { staticClass: "interest" }, [
	            _c("span", { staticClass: "text-muted" }, [
	              _c("i", { staticClass: "fa fa-puzzle-piece" }, [_vm._v(" ")]),
	              _vm._v("\n\t\t\t\t" + _vm._s(_vm.user.interest) + "\n\t\t\t")
	            ])
	          ])
	        : _vm._e()
	    ]),
	    _vm._v(" "),
	    _vm.can_edit_profile
	      ? _c(
	          "a",
	          {
	            staticClass: "edit-profile-link",
	            on: {
	              click: function($event) {
	                return _vm.edit_profile()
	              }
	            }
	          },
	          [_vm._v(_vm._s(_vm.__("Edit Profile")))]
	        )
	      : _vm._e(),
	    _vm._v(" "),
	    _vm.can_edit_user
	      ? _c(
	          "a",
	          {
	            staticClass: "edit-profile-link",
	            on: {
	              click: function($event) {
	                return _vm.edit_user()
	              }
	            }
	          },
	          [_vm._v(_vm._s(_vm.__("User Settings")))]
	        )
	      : _vm._e()
	  ])
	};
	var __vue_staticRenderFns__$9 = [];
	__vue_render__$9._withStripped = true;

	  /* style */
	  var __vue_inject_styles__$9 = function (inject) {
	    if (!inject) { return }
	    inject("data-v-7e3caed4_0", { source: ".profile-sidebar[data-v-7e3caed4] {\n  padding: 10px 10px 0 0;\n}\n.user-details[data-v-7e3caed4] {\n  min-height: 150px;\n}\n.user-details .location[data-v-7e3caed4],\n.user-details .interest[data-v-7e3caed4] {\n  margin-bottom: 10px;\n}\n.user-details .location i[data-v-7e3caed4],\n.user-details .interest i[data-v-7e3caed4] {\n  width: 15px;\n}\n.edit-profile-link[data-v-7e3caed4] {\n  margin-top: 15px;\n}\n", map: {"version":3,"sources":["ProfileSidebar.vue"],"names":[],"mappings":"AAAA;EACE,sBAAsB;AACxB;AACA;EACE,iBAAiB;AACnB;AACA;;EAEE,mBAAmB;AACrB;AACA;;EAEE,WAAW;AACb;AACA;EACE,gBAAgB;AAClB","file":"ProfileSidebar.vue","sourcesContent":[".profile-sidebar {\n  padding: 10px 10px 0 0;\n}\n.user-details {\n  min-height: 150px;\n}\n.user-details .location,\n.user-details .interest {\n  margin-bottom: 10px;\n}\n.user-details .location i,\n.user-details .interest i {\n  width: 15px;\n}\n.edit-profile-link {\n  margin-top: 15px;\n}\n"]}, media: undefined });

	  };
	  /* scoped */
	  var __vue_scope_id__$9 = "data-v-7e3caed4";
	  /* module identifier */
	  var __vue_module_identifier__$9 = undefined;
	  /* functional template */
	  var __vue_is_functional_template__$9 = false;
	  /* component normalizer */
	  function __vue_normalize__$9(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/components/ProfileSidebar.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    {
	      var hook;
	      if (style) {
	        hook = function(context) {
	          style.call(this, createInjector(context));
	        };
	      }

	      if (hook !== undefined) {
	        if (component.functional) {
	          // register for functional component in vue file
	          var originalRender = component.render;
	          component.render = function renderWithStyleInjection(h, context) {
	            hook.call(context);
	            return originalRender(h, context)
	          };
	        } else {
	          // inject component registration as beforeCreate hook
	          var existing = component.beforeCreate;
	          component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
	        }
	      }
	    }

	    return component
	  }
	  /* style inject */
	  function __vue_create_injector__$7() {
	    var head = document.head || document.getElementsByTagName('head')[0];
	    var styles = __vue_create_injector__$7.styles || (__vue_create_injector__$7.styles = {});
	    var isOldIE =
	      typeof navigator !== 'undefined' &&
	      /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

	    return function addStyle(id, css) {
	      if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

	      var group = isOldIE ? css.media || 'default' : id;
	      var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

	      if (!style.ids.includes(id)) {
	        var code = css.source;
	        var index = style.ids.length;

	        style.ids.push(id);

	        if (isOldIE) {
	          style.element = style.element || document.querySelector('style[data-group=' + group + ']');
	        }

	        if (!style.element) {
	          var el = style.element = document.createElement('style');
	          el.type = 'text/css';

	          if (css.media) { el.setAttribute('media', css.media); }
	          if (isOldIE) {
	            el.setAttribute('data-group', group);
	            el.setAttribute('data-next-index', '0');
	          }

	          head.appendChild(el);
	        }

	        if (isOldIE) {
	          index = parseInt(style.element.getAttribute('data-next-index'));
	          style.element.setAttribute('data-next-index', index + 1);
	        }

	        if (style.element.styleSheet) {
	          style.parts.push(code);
	          style.element.styleSheet.cssText = style.parts
	            .filter(Boolean)
	            .join('\n');
	        } else {
	          var textNode = document.createTextNode(code);
	          var nodes = style.element.childNodes;
	          if (nodes[index]) { style.element.removeChild(nodes[index]); }
	          if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
	          else { style.element.appendChild(textNode); }
	        }
	      }
	    }
	  }
	  /* style inject SSR */
	  

	  
	  var ProfileSidebar = __vue_normalize__$9(
	    { render: __vue_render__$9, staticRenderFns: __vue_staticRenderFns__$9 },
	    __vue_inject_styles__$9,
	    __vue_script__$8,
	    __vue_scope_id__$9,
	    __vue_is_functional_template__$9,
	    __vue_module_identifier__$9,
	    __vue_create_injector__$7,
	    undefined
	  );

	//
	//
	//
	//
	//
	//
	//
	//

	var script$9 = {
		props: ['user_id'],
		data: function data() {
			return {
				user_avatar: frappe.avatar(this.user_id, 'avatar-xl'),
				user_banner: frappe.user_info(this.user_id).banner_image
			}
		},
		created: function created() {
			var this$1 = this;

			this.$root.$on('user_image_updated', function () {
				this$1.user_avatar = frappe.avatar(this$1.user_id, 'avatar-xl');
				this$1.user_banner = frappe.user_info(this$1.user_id).banner_image;
			});
		},
		computed: {
			background_style: function background_style() {
				var style = {};
				if (this.user_banner) {
					style['background-image'] = "url('" + (this.user_banner) + "')";
				}
				return style;
			}
		},
	};

	/* script */
	            var __vue_script__$9 = script$9;
	            
	/* template */
	var __vue_render__$a = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    { ref: "banner", staticClass: "banner", style: _vm.background_style },
	    [
	      _c("div", {
	        staticClass: "user-avatar container",
	        domProps: { innerHTML: _vm._s(_vm.user_avatar) }
	      })
	    ]
	  )
	};
	var __vue_staticRenderFns__$a = [];
	__vue_render__$a._withStripped = true;

	  /* style */
	  var __vue_inject_styles__$a = function (inject) {
	    if (!inject) { return }
	    inject("data-v-ea8af14e_0", { source: ".banner[data-v-ea8af14e] {\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 300px;\n  z-index: 101;\n  position: absolute;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-color: #262626;\n}\n.banner .user-avatar[data-v-ea8af14e] {\n  position: relative;\n}\n.banner .user-avatar[data-v-ea8af14e] .avatar {\n  top: 220px;\n  left: 10px;\n  width: 150px;\n  height: 150px;\n  border-radius: 4px;\n  background: white;\n  position: absolute !important;\n}\n.banner .editable-image[data-v-ea8af14e] .avatar {\n  cursor: pointer;\n}\n.banner .editable-image[data-v-ea8af14e] .avatar :hover {\n  opacity: 0.9;\n}\n", map: {"version":3,"sources":["ProfileBanner.vue"],"names":[],"mappings":"AAAA;EACE,MAAM;EACN,OAAO;EACP,WAAW;EACX,aAAa;EACb,YAAY;EACZ,kBAAkB;EAClB,sBAAsB;EACtB,2BAA2B;EAC3B,4BAA4B;EAC5B,yBAAyB;AAC3B;AACA;EACE,kBAAkB;AACpB;AACA;EACE,UAAU;EACV,UAAU;EACV,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,iBAAiB;EACjB,6BAA6B;AAC/B;AACA;EACE,eAAe;AACjB;AACA;EACE,YAAY;AACd","file":"ProfileBanner.vue","sourcesContent":[".banner {\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 300px;\n  z-index: 101;\n  position: absolute;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-color: #262626;\n}\n.banner .user-avatar {\n  position: relative;\n}\n.banner .user-avatar /deep/ .avatar {\n  top: 220px;\n  left: 10px;\n  width: 150px;\n  height: 150px;\n  border-radius: 4px;\n  background: white;\n  position: absolute !important;\n}\n.banner .editable-image /deep/ .avatar {\n  cursor: pointer;\n}\n.banner .editable-image /deep/ .avatar :hover {\n  opacity: 0.9;\n}\n"]}, media: undefined });

	  };
	  /* scoped */
	  var __vue_scope_id__$a = "data-v-ea8af14e";
	  /* module identifier */
	  var __vue_module_identifier__$a = undefined;
	  /* functional template */
	  var __vue_is_functional_template__$a = false;
	  /* component normalizer */
	  function __vue_normalize__$a(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/components/ProfileBanner.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    {
	      var hook;
	      if (style) {
	        hook = function(context) {
	          style.call(this, createInjector(context));
	        };
	      }

	      if (hook !== undefined) {
	        if (component.functional) {
	          // register for functional component in vue file
	          var originalRender = component.render;
	          component.render = function renderWithStyleInjection(h, context) {
	            hook.call(context);
	            return originalRender(h, context)
	          };
	        } else {
	          // inject component registration as beforeCreate hook
	          var existing = component.beforeCreate;
	          component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
	        }
	      }
	    }

	    return component
	  }
	  /* style inject */
	  function __vue_create_injector__$8() {
	    var head = document.head || document.getElementsByTagName('head')[0];
	    var styles = __vue_create_injector__$8.styles || (__vue_create_injector__$8.styles = {});
	    var isOldIE =
	      typeof navigator !== 'undefined' &&
	      /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

	    return function addStyle(id, css) {
	      if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

	      var group = isOldIE ? css.media || 'default' : id;
	      var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

	      if (!style.ids.includes(id)) {
	        var code = css.source;
	        var index = style.ids.length;

	        style.ids.push(id);

	        if (isOldIE) {
	          style.element = style.element || document.querySelector('style[data-group=' + group + ']');
	        }

	        if (!style.element) {
	          var el = style.element = document.createElement('style');
	          el.type = 'text/css';

	          if (css.media) { el.setAttribute('media', css.media); }
	          if (isOldIE) {
	            el.setAttribute('data-group', group);
	            el.setAttribute('data-next-index', '0');
	          }

	          head.appendChild(el);
	        }

	        if (isOldIE) {
	          index = parseInt(style.element.getAttribute('data-next-index'));
	          style.element.setAttribute('data-next-index', index + 1);
	        }

	        if (style.element.styleSheet) {
	          style.parts.push(code);
	          style.element.styleSheet.cssText = style.parts
	            .filter(Boolean)
	            .join('\n');
	        } else {
	          var textNode = document.createTextNode(code);
	          var nodes = style.element.childNodes;
	          if (nodes[index]) { style.element.removeChild(nodes[index]); }
	          if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
	          else { style.element.appendChild(textNode); }
	        }
	      }
	    }
	  }
	  /* style inject SSR */
	  

	  
	  var ProfileBanner = __vue_normalize__$a(
	    { render: __vue_render__$a, staticRenderFns: __vue_staticRenderFns__$a },
	    __vue_inject_styles__$a,
	    __vue_script__$9,
	    __vue_scope_id__$a,
	    __vue_is_functional_template__$a,
	    __vue_module_identifier__$a,
	    __vue_create_injector__$8,
	    undefined
	  );

	//
	var script$a = {
		props: ['user_id'],
		components: {
			PostLoader: PostLoader,
			ProfileSidebar: ProfileSidebar,
			ProfileBanner: ProfileBanner,
			ActivitySidebar: ActivitySidebar
		},
		data: function data() {
			return {
				show_list: 'user_posts',
				post_list_filter : null,
				user_posts_count: 0,
				liked_posts_count: 0,
			}
		},
		watch: {
			show_list: function show_list() {
				if (this.show_list == 'user_posts') {
					this.post_list_filter = this.get_user_posts_filter();
				} else if (this.show_list == 'liked_posts') {
					this.post_list_filter = this.get_liked_posts_filter();
				}
			}
		},
		created: function created() {
			this.post_list_filter = this.get_user_posts_filter();
			this.set_post_count();
		},
		methods: {
			get_user_posts_filter: function get_user_posts_filter() {
				return {
					'owner': this.user_id
				}
			},
			get_liked_posts_filter: function get_liked_posts_filter() {
				return {
					'liked_by': ['like', '%' + this.user_id + '%']
				}
			},
			set_post_count: function set_post_count() {
				var this$1 = this;

				frappe.db.count('Post', { filters: this.get_user_posts_filter() })
					.then(function (count) { return this$1.user_posts_count = count; });

				frappe.db.count('Post', { filters: this.get_liked_posts_filter() })
					.then(function (count) { return this$1.liked_posts_count = count; });
			}
		}
	};

	/* script */
	            var __vue_script__$a = script$a;
	            
	/* template */
	var __vue_render__$b = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", [
	    _c(
	      "div",
	      { staticClass: "profile-head" },
	      [_c("profile-banner", { attrs: { user_id: _vm.user_id } })],
	      1
	    ),
	    _vm._v(" "),
	    _c(
	      "div",
	      { staticClass: "profile-container" },
	      [
	        _c("profile-sidebar", {
	          staticClass: "profile-sidebar",
	          attrs: { user_id: _vm.user_id }
	        }),
	        _vm._v(" "),
	        _c(
	          "div",
	          { staticClass: "post-container" },
	          [
	            _c("div", { staticClass: "list-options" }, [
	              _c(
	                "div",
	                {
	                  staticClass: "option",
	                  class: { bold: _vm.show_list === "user_posts" },
	                  on: {
	                    click: function($event) {
	                      _vm.show_list = "user_posts";
	                    }
	                  }
	                },
	                [
	                  _c("span", [_vm._v(_vm._s(_vm.__("Posts")))]),
	                  _vm._v(" "),
	                  _c("span", [_vm._v("(" + _vm._s(_vm.user_posts_count) + ")")])
	                ]
	              ),
	              _vm._v(" "),
	              _c(
	                "div",
	                {
	                  staticClass: "option",
	                  class: { bold: _vm.show_list === "liked_posts" },
	                  on: {
	                    click: function($event) {
	                      _vm.show_list = "liked_posts";
	                    }
	                  }
	                },
	                [
	                  _c("span", [_vm._v(_vm._s(_vm.__("Likes")))]),
	                  _vm._v(" "),
	                  _c("span", [
	                    _vm._v("(" + _vm._s(_vm.liked_posts_count) + ")")
	                  ])
	                ]
	              )
	            ]),
	            _vm._v(" "),
	            _c("post-loader", {
	              attrs: { post_list_filter: _vm.post_list_filter }
	            })
	          ],
	          1
	        ),
	        _vm._v(" "),
	        _c("activity-sidebar", { staticClass: "activity-sidebar hidden-xs" })
	      ],
	      1
	    )
	  ])
	};
	var __vue_staticRenderFns__$b = [];
	__vue_render__$b._withStripped = true;

	  /* style */
	  var __vue_inject_styles__$b = function (inject) {
	    if (!inject) { return }
	    inject("data-v-2d36db41_0", { source: ".profile-head[data-v-2d36db41] {\n  height: 190px;\n}\n.profile-sidebar[data-v-2d36db41] {\n  margin-top: 60px;\n  flex: 20%;\n}\n.right-sidebar[data-v-2d36db41] {\n  margin-top: 5px;\n}\n.list-options[data-v-2d36db41] {\n  display: flex;\n}\n.list-options .option[data-v-2d36db41] {\n  cursor: pointer;\n  padding: 0px 10px 10px 0;\n}\n", map: {"version":3,"sources":["Profile.vue"],"names":[],"mappings":"AAAA;EACE,aAAa;AACf;AACA;EACE,gBAAgB;EAChB,SAAS;AACX;AACA;EACE,eAAe;AACjB;AACA;EACE,aAAa;AACf;AACA;EACE,eAAe;EACf,wBAAwB;AAC1B","file":"Profile.vue","sourcesContent":[".profile-head {\n  height: 190px;\n}\n.profile-sidebar {\n  margin-top: 60px;\n  flex: 20%;\n}\n.right-sidebar {\n  margin-top: 5px;\n}\n.list-options {\n  display: flex;\n}\n.list-options .option {\n  cursor: pointer;\n  padding: 0px 10px 10px 0;\n}\n"]}, media: undefined });

	  };
	  /* scoped */
	  var __vue_scope_id__$b = "data-v-2d36db41";
	  /* module identifier */
	  var __vue_module_identifier__$b = undefined;
	  /* functional template */
	  var __vue_is_functional_template__$b = false;
	  /* component normalizer */
	  function __vue_normalize__$b(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/pages/Profile.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    {
	      var hook;
	      if (style) {
	        hook = function(context) {
	          style.call(this, createInjector(context));
	        };
	      }

	      if (hook !== undefined) {
	        if (component.functional) {
	          // register for functional component in vue file
	          var originalRender = component.render;
	          component.render = function renderWithStyleInjection(h, context) {
	            hook.call(context);
	            return originalRender(h, context)
	          };
	        } else {
	          // inject component registration as beforeCreate hook
	          var existing = component.beforeCreate;
	          component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
	        }
	      }
	    }

	    return component
	  }
	  /* style inject */
	  function __vue_create_injector__$9() {
	    var head = document.head || document.getElementsByTagName('head')[0];
	    var styles = __vue_create_injector__$9.styles || (__vue_create_injector__$9.styles = {});
	    var isOldIE =
	      typeof navigator !== 'undefined' &&
	      /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

	    return function addStyle(id, css) {
	      if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

	      var group = isOldIE ? css.media || 'default' : id;
	      var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

	      if (!style.ids.includes(id)) {
	        var code = css.source;
	        var index = style.ids.length;

	        style.ids.push(id);

	        if (isOldIE) {
	          style.element = style.element || document.querySelector('style[data-group=' + group + ']');
	        }

	        if (!style.element) {
	          var el = style.element = document.createElement('style');
	          el.type = 'text/css';

	          if (css.media) { el.setAttribute('media', css.media); }
	          if (isOldIE) {
	            el.setAttribute('data-group', group);
	            el.setAttribute('data-next-index', '0');
	          }

	          head.appendChild(el);
	        }

	        if (isOldIE) {
	          index = parseInt(style.element.getAttribute('data-next-index'));
	          style.element.setAttribute('data-next-index', index + 1);
	        }

	        if (style.element.styleSheet) {
	          style.parts.push(code);
	          style.element.styleSheet.cssText = style.parts
	            .filter(Boolean)
	            .join('\n');
	        } else {
	          var textNode = document.createTextNode(code);
	          var nodes = style.element.childNodes;
	          if (nodes[index]) { style.element.removeChild(nodes[index]); }
	          if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
	          else { style.element.appendChild(textNode); }
	        }
	      }
	    }
	  }
	  /* style inject SSR */
	  

	  
	  var Profile = __vue_normalize__$b(
	    { render: __vue_render__$b, staticRenderFns: __vue_staticRenderFns__$b },
	    __vue_inject_styles__$b,
	    __vue_script__$a,
	    __vue_scope_id__$b,
	    __vue_is_functional_template__$b,
	    __vue_module_identifier__$b,
	    __vue_create_injector__$9,
	    undefined
	  );

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var script$b = {
		data: function data() {
			return {
				users: [],
				filter_users_by: null,
				sort_users_by: 'energy_points',
				sort_order: 'desc',
				show_log_for: null,
				period_options: ['Lifetime', 'This Month', 'This Week', 'Today'],
				period: 'This Month'
			};
		},
		computed: {
			from_date: function from_date() {
				if (this.period === 'This Month') {
					return frappe.datetime.month_start();
				}
				if (this.period === 'This Week') {
					return frappe.datetime.week_start();
				}
				if (this.period === 'Today') {
					return frappe.datetime.get_today();
				}
				return null;
			},
			filtered_users: function filtered_users() {
				var this$1 = this;

				var filtered = this.users.slice();
				if (this.filter_users_by) {
					filtered = filtered.filter(function (user) { return user.fullname
							.toLowerCase()
							.includes(this$1.filter_users_by.toLowerCase()); }
					);
				}

				if (this.sort_users_by) {
					filtered.sort(function (a, b) {
						var value_a = a[this$1.sort_users_by];
						var value_b = b[this$1.sort_users_by];

						var return_value = 0;
						if (value_a > value_b) {
							return_value = 1;
						}

						if (value_a < value_b) {
							return_value = -1;
						}

						if (this$1.sort_order === 'desc') {
							return_value = -return_value;
						}

						return return_value;
					});
				}
				return filtered;
			}
		},
		watch: {
			period: function period() {
				this.fetch_users_energy_points_and_update_users();
			}
		},
		mounted: function mounted() {
			$('[data-toggle="tooltip"]').tooltip();
		},
		created: function created() {
			var this$1 = this;

			var standard_users = ['Administrator', 'Guest', 'guest@example.com'];
			this.users = frappe.boot.user_info;
			// delete standard users from the list
			standard_users.forEach(function (user) { return delete this$1.users[user]; });
			this.users = Object.values(this.users);
			this.fetch_users_energy_points_and_update_users();
			frappe.realtime.on('update_points', function () {
				this$1.fetch_users_energy_points_and_update_users();
			});
		},
		methods: {
			get_avatar: function get_avatar(user) {
				return frappe.avatar(user, 'avatar-medium');
			},
			go_to_profile_page: function go_to_profile_page(user) {
				frappe.set_route('social', 'profile', user);
			},
			fetch_users_energy_points_and_update_users: function fetch_users_energy_points_and_update_users() {
				var this$1 = this;

				frappe
					.xcall(
						'frappe.social.doctype.energy_point_log.energy_point_log.get_user_energy_and_review_points',
						{
							from_date: this.from_date
						}
					)
					.then(function (data) {
						var users = this$1.users.slice();
						this$1.users = users.map(function (user) {
							var points = data[user.name] || {};
							user.energy_points = points.energy_points || 0;
							user.review_points = points.review_points || 0;
							user.given_points = points.given_points || 0;
							return user;
						});
					});
			},
			toggle_log: function toggle_log(user) {
				frappe.set_route('List', 'Energy Point Log', {user:user});
			}
		}
	};

	/* script */
	            var __vue_script__$b = script$b;
	            
	/* template */
	var __vue_render__$c = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", { staticClass: "user-list-container" }, [
	    _c(
	      "ul",
	      { staticClass: "list-unstyled user-list" },
	      [
	        _c("li", { staticClass: "user-card user-list-header text-medium" }, [
	          _c("span", { staticClass: "rank-column" }),
	          _vm._v(" "),
	          _c("span", { staticClass: "user-details text-muted" }, [
	            _c("input", {
	              directives: [
	                {
	                  name: "model",
	                  rawName: "v-model",
	                  value: _vm.filter_users_by,
	                  expression: "filter_users_by"
	                }
	              ],
	              staticClass: "form-control",
	              attrs: { type: "search", placeholder: "Search User" },
	              domProps: { value: _vm.filter_users_by },
	              on: {
	                input: function($event) {
	                  if ($event.target.composing) {
	                    return
	                  }
	                  _vm.filter_users_by = $event.target.value;
	                }
	              }
	            })
	          ]),
	          _vm._v(" "),
	          _c("span", { staticClass: "flex-40" }),
	          _vm._v(" "),
	          _c("span", { staticClass: "flex-20 text-muted" }, [
	            _c(
	              "select",
	              {
	                directives: [
	                  {
	                    name: "model",
	                    rawName: "v-model",
	                    value: _vm.period,
	                    expression: "period"
	                  }
	                ],
	                staticClass: "form-control",
	                attrs: { "data-toggle": "tooltip", title: "Period" },
	                on: {
	                  change: function($event) {
	                    var $$selectedVal = Array.prototype.filter
	                      .call($event.target.options, function(o) {
	                        return o.selected
	                      })
	                      .map(function(o) {
	                        var val = "_value" in o ? o._value : o.value;
	                        return val
	                      });
	                    _vm.period = $event.target.multiple
	                      ? $$selectedVal
	                      : $$selectedVal[0];
	                  }
	                }
	              },
	              _vm._l(_vm.period_options, function(value) {
	                return _c(
	                  "option",
	                  { key: value, domProps: { value: value } },
	                  [_vm._v(_vm._s(value))]
	                )
	              }),
	              0
	            )
	          ])
	        ]),
	        _vm._v(" "),
	        _c(
	          "li",
	          { staticClass: "user-card user-list-header text-medium" },
	          [
	            _c("span", { staticClass: "rank-column" }, [_vm._v("#")]),
	            _vm._v(" "),
	            _c("span", { staticClass: "user-details text-muted" }, [
	              _vm._v(_vm._s(_vm.__("User")))
	            ]),
	            _vm._v(" "),
	            _vm._l(["Energy Points", "Review Points", "Points Given"], function(
	              title
	            ) {
	              return _c(
	                "span",
	                { key: title, staticClass: "flex-20 text-muted" },
	                [_vm._v(_vm._s(_vm.__(title)))]
	              )
	            })
	          ],
	          2
	        ),
	        _vm._v(" "),
	        _vm._l(_vm.filtered_users, function(user, index) {
	          return _c("li", { key: user.name }, [
	            _c(
	              "div",
	              { staticClass: "user-card" },
	              [
	                _c(
	                  "span",
	                  {
	                    staticClass: "user-details flex",
	                    on: {
	                      click: function($event) {
	                        return _vm.go_to_profile_page(user.name)
	                      }
	                    }
	                  },
	                  [
	                    _c("span", { staticClass: "rank-column" }, [
	                      _vm._v(_vm._s(index + 1))
	                    ]),
	                    _vm._v(" "),
	                    _c("span", {
	                      domProps: { innerHTML: _vm._s(_vm.get_avatar(user.name)) }
	                    }),
	                    _vm._v(" "),
	                    _c("span", [
	                      _vm._v(
	                        "\n\t\t\t\t\t\t" +
	                          _vm._s(user.fullname) +
	                          "\n\t\t\t\t\t\t"
	                      ),
	                      _c(
	                        "div",
	                        {
	                          staticClass: "text-muted text-medium",
	                          class: { italic: !user.bio }
	                        },
	                        [
	                          _vm._v(
	                            _vm._s(
	                              _vm.frappe.ellipsis(user.bio, 100) || "No Bio"
	                            )
	                          )
	                        ]
	                      )
	                    ])
	                  ]
	                ),
	                _vm._v(" "),
	                _vm._l(
	                  ["energy_points", "review_points", "given_points"],
	                  function(key) {
	                    return _c(
	                      "span",
	                      {
	                        key: key,
	                        staticClass: "text-muted text-nowrap flex-20",
	                        on: {
	                          click: function($event) {
	                            return _vm.toggle_log(user.name)
	                          }
	                        }
	                      },
	                      [_vm._v(_vm._s(user[key]))]
	                    )
	                  }
	                )
	              ],
	              2
	            )
	          ])
	        }),
	        _vm._v(" "),
	        !_vm.filtered_users.length
	          ? _c("li", { staticClass: "user-card text-muted" }, [
	              _vm._v(_vm._s(_vm.__("No user found")))
	            ])
	          : _vm._e()
	      ],
	      2
	    )
	  ])
	};
	var __vue_staticRenderFns__$c = [];
	__vue_render__$c._withStripped = true;

	  /* style */
	  var __vue_inject_styles__$c = function (inject) {
	    if (!inject) { return }
	    inject("data-v-5b5b5e6d_0", { source: "/* palette colors*/\n/* the element that this class is applied to, should have a max width for this to work*/\nbody[data-v-5b5b5e6d] {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n}\na[data-v-5b5b5e6d] {\n  cursor: pointer;\n}\na[data-v-5b5b5e6d],\na[data-v-5b5b5e6d]:hover,\na[data-v-5b5b5e6d]:active,\na[data-v-5b5b5e6d]:focus,\n.btn[data-v-5b5b5e6d],\n.btn[data-v-5b5b5e6d]:hover,\n.btn[data-v-5b5b5e6d]:active,\n.btn[data-v-5b5b5e6d]:focus {\n  outline: 0;\n}\nimg[data-v-5b5b5e6d] {\n  max-width: 100%;\n}\np[data-v-5b5b5e6d] {\n  margin: 10px 0;\n}\ndetails > summary[data-v-5b5b5e6d] {\n  cursor: pointer;\n}\ndetails > summary[data-v-5b5b5e6d]:focus {\n  outline: none;\n}\n.text-color[data-v-5b5b5e6d] {\n  color: #36414c !important;\n}\n.text-muted[data-v-5b5b5e6d] {\n  color: #8D99A6 !important;\n}\n.text-extra-muted[data-v-5b5b5e6d] {\n  color: #d1d8dd !important;\n}\na[data-v-5b5b5e6d],\n.badge[data-v-5b5b5e6d] {\n  -webkit-transition: 0.2s;\n  -o-transition: 0.2s;\n  transition: 0.2s;\n}\n.btn[data-v-5b5b5e6d] {\n  -webkit-transition: background-color 0.2s;\n  -o-transition: background-color 0.2s;\n  transition: background-color 0.2s;\n}\na.disabled[data-v-5b5b5e6d],\na.disabled[data-v-5b5b5e6d]:hover {\n  color: #888;\n  cursor: default;\n  text-decoration: none;\n}\na.grey[data-v-5b5b5e6d],\n.sidebar-section a[data-v-5b5b5e6d],\n.control-value a[data-v-5b5b5e6d],\n.data-row a[data-v-5b5b5e6d] {\n  text-decoration: none;\n}\na.grey[data-v-5b5b5e6d]:hover,\n.sidebar-section a[data-v-5b5b5e6d]:hover,\n.control-value a[data-v-5b5b5e6d]:hover,\n.data-row a[data-v-5b5b5e6d]:hover,\na.grey[data-v-5b5b5e6d]:focus,\n.sidebar-section a[data-v-5b5b5e6d]:focus,\n.control-value a[data-v-5b5b5e6d]:focus,\n.data-row a[data-v-5b5b5e6d]:focus {\n  text-decoration: underline;\n}\na.text-muted[data-v-5b5b5e6d],\na.text-extra-muted[data-v-5b5b5e6d] {\n  text-decoration: none;\n}\n.underline[data-v-5b5b5e6d] {\n  text-decoration: underline;\n}\n.inline-block[data-v-5b5b5e6d] {\n  display: inline-block;\n}\n.bold[data-v-5b5b5e6d],\n.strong[data-v-5b5b5e6d] {\n  font-weight: bold;\n}\nkbd[data-v-5b5b5e6d] {\n  color: inherit;\n  background-color: #f0f4f7;\n}\n.btn [class^=\"fa fa-\"][data-v-5b5b5e6d],\n.nav [class^=\"fa fa-\"][data-v-5b5b5e6d],\n.btn [class*=\"fa fa-\"][data-v-5b5b5e6d],\n.nav [class*=\"fa fa-\"][data-v-5b5b5e6d] {\n  display: inline-block;\n}\n/* dropdowns */\n.dropdown-backdrop[data-v-5b5b5e6d] {\n  display: none;\n}\n.dropdown-menu > li > a[data-v-5b5b5e6d] {\n  padding: 14px;\n  white-space: normal;\n}\n.dropdown-menu[data-v-5b5b5e6d] {\n  min-width: 200px;\n  padding: 0px;\n  font-size: 12px;\n  max-height: 500px;\n  overflow: auto;\n  border-radius: 0px 0px 4px 4px;\n}\n.dropdown-menu .dropdown-header[data-v-5b5b5e6d] {\n  padding: 3px 14px;\n  font-size: 11px;\n  font-weight: 200;\n  padding-top: 12px;\n}\n.dropdown-menu .divider[data-v-5b5b5e6d] {\n  margin: 0px;\n}\na.badge-hover:hover .badge[data-v-5b5b5e6d],\na.badge-hover:focus .badge[data-v-5b5b5e6d],\na.badge-hover:active .badge[data-v-5b5b5e6d] {\n  background-color: #d8dfe5;\n}\n.msgprint-dialog[data-v-5b5b5e6d] {\n  max-width: 400px;\n}\n.msgprint-dialog .modal-content[data-v-5b5b5e6d] {\n  min-height: 110px;\n}\n.msgprint-scroll[data-v-5b5b5e6d] {\n  max-height: 36em;\n  overflow: scroll;\n}\n.msgprint[data-v-5b5b5e6d] {\n  word-wrap: break-word;\n}\n.msgprint pre[data-v-5b5b5e6d] {\n  text-align: left;\n}\n.msgprint a[data-v-5b5b5e6d]:not(.btn) {\n  text-decoration: underline;\n}\n.centered[data-v-5b5b5e6d] {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  -webkit-transform: translate(-50%, -50%);\n}\n.border-top[data-v-5b5b5e6d] {\n  border-top: 1px solid #d1d8dd;\n}\n.border-bottom[data-v-5b5b5e6d] {\n  border-bottom: 1px solid #d1d8dd;\n}\n.border-left[data-v-5b5b5e6d] {\n  border-left: 1px solid #d1d8dd;\n}\n.border-right[data-v-5b5b5e6d] {\n  border-right: 1px solid #d1d8dd;\n}\n.border[data-v-5b5b5e6d] {\n  border: 1px solid #d1d8dd;\n}\n.rounded[data-v-5b5b5e6d] {\n  border-radius: 4px;\n}\n.close-inline[data-v-5b5b5e6d] {\n  font-size: 120%;\n  font-weight: bold;\n  line-height: 1;\n  cursor: pointer;\n  color: inherit;\n  display: inline-block;\n}\n.close-inline[data-v-5b5b5e6d]:hover,\n.close-inline[data-v-5b5b5e6d]:focus {\n  text-decoration: none;\n}\n.middle[data-v-5b5b5e6d] {\n  vertical-align: middle;\n}\n.full-center-container[data-v-5b5b5e6d] {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n.full-center[data-v-5b5b5e6d] {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 100%;\n  transform: translate(-50%, -50%);\n  -webkit-transform: translate(-50%, -50%);\n}\n#freeze[data-v-5b5b5e6d] {\n  z-index: 1020;\n  bottom: 0;\n  opacity: 0;\n  background-color: #fafbfc;\n}\n#freeze .freeze-message-container[data-v-5b5b5e6d] {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n#freeze .freeze-message[data-v-5b5b5e6d] {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 100%;\n  transform: translate(-50%, -50%);\n  -webkit-transform: translate(-50%, -50%);\n  text-align: center;\n  color: #36414c !important;\n}\n#freeze.dark[data-v-5b5b5e6d] {\n  background-color: #334143;\n}\n#freeze.in[data-v-5b5b5e6d] {\n  opacity: 0.5;\n}\na.no-decoration[data-v-5b5b5e6d] {\n  text-decoration: none;\n  color: inherit;\n}\na.no-decoration[data-v-5b5b5e6d]:hover,\na.no-decoration[data-v-5b5b5e6d]:focus,\na.no-decoration[data-v-5b5b5e6d]:active {\n  text-decoration: none;\n  color: inherit;\n}\n.padding[data-v-5b5b5e6d] {\n  padding: 15px;\n}\n.margin[data-v-5b5b5e6d] {\n  margin: 15px;\n}\n.margin-top[data-v-5b5b5e6d] {\n  margin-top: 15px;\n}\n.margin-bottom[data-v-5b5b5e6d] {\n  margin-bottom: 15px;\n}\n.margin-left[data-v-5b5b5e6d] {\n  margin-left: 15px;\n}\n.margin-right[data-v-5b5b5e6d] {\n  margin-right: 15px;\n}\n@media (max-width: 767px) {\n.text-center-xs[data-v-5b5b5e6d] {\n    text-align: center;\n}\n}\n.grayscale[data-v-5b5b5e6d] {\n  -webkit-filter: grayscale(100%);\n  filter: grayscale(100%);\n}\n.uppercase[data-v-5b5b5e6d] {\n  padding-bottom: 4px;\n  text-transform: uppercase;\n  font-size: 12px;\n  letter-spacing: 0.4px;\n  color: #8d99a6;\n}\n.ellipsis[data-v-5b5b5e6d] {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n  vertical-align: middle;\n}\n/* Given that the element that text-ellipsis is applied to,\n\tshould have a max width for it to work */\n.ellipsis-width[data-v-5b5b5e6d] {\n  max-width: 200px;\n}\n/* Font size utilities */\n.text-regular[data-v-5b5b5e6d] {\n  font-size: 14px;\n}\n.text-medium[data-v-5b5b5e6d] {\n  font-size: 12px;\n}\n.text-small[data-v-5b5b5e6d] {\n  font-size: 10px;\n}\n.text-large[data-v-5b5b5e6d] {\n  font-size: 16px;\n}\n.disable-click[data-v-5b5b5e6d] {\n  pointer-events: none;\n}\n.popover-title[data-v-5b5b5e6d] {\n  display: none;\n}\n.user-list[data-v-5b5b5e6d] {\n  border-left: 1px solid #d1d8dd;\n  border-right: 1px solid #d1d8dd;\n}\n.user-list .user-card[data-v-5b5b5e6d] {\n  display: flex;\n  cursor: pointer;\n  padding: 12px 15px;\n  border-bottom: 1px solid #d1d8dd;\n}\n.user-list .user-card .user-details[data-v-5b5b5e6d] {\n  flex: 1;\n}\n.user-list .user-card .user-details .italic[data-v-5b5b5e6d] {\n  font-style: italic;\n}\n.rank-column[data-v-5b5b5e6d] {\n  flex: 0 0 30px;\n  align-self: center;\n  color: #8D99A6 !important;\n}\n.flex-20[data-v-5b5b5e6d] {\n  flex: 0 0 20%;\n  text-align: right;\n  align-self: center;\n}\n.flex-40[data-v-5b5b5e6d] {\n  flex: 0 0 40%;\n}\n.user-list-header[data-v-5b5b5e6d] {\n  background-color: #fafbfc;\n}\n.search-bar[data-v-5b5b5e6d] {\n  position: sticky;\n  top: 0;\n  background: white;\n  height: 75px;\n  text-align: center;\n  width: 100%;\n  left: 0;\n}\n.search-bar div[data-v-5b5b5e6d] {\n  margin: auto;\n}\n.energy-point-history[data-v-5b5b5e6d] {\n  border-bottom: 1px solid #d1d8dd;\n  background-color: #fafbfc;\n}\n", map: {"version":3,"sources":["UserList.vue","/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/pages/UserList.vue"],"names":[],"mappings":"AAAA,kBAAkB;AAClB,uFAAuF;AACvF;EACE,8JAA8J;AAChK;AACA;EACE,eAAe;AACjB;AACA;;;;;;;;EAQE,UAAU;AACZ;AACA;EACE,eAAe;AACjB;AACA;EACE,cAAc;AAChB;AACA;EACE,eAAe;AACjB;AACA;EACE,aAAa;AACf;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,yBAAyB;AAC3B;AACA;;EAEE,wBAAwB;EACxB,mBAAmB;EACnB,gBAAgB;AAClB;AACA;EACE,yCAAyC;EACzC,oCAAoC;EACpC,iCAAiC;AACnC;AACA;;EAEE,WAAW;EACX,eAAe;EACf,qBAAqB;AACvB;AACA;;;;EAIE,qBAAqB;AACvB;AACA;;;;;;;;EAQE,0BAA0B;AAC5B;AACA;;EAEE,qBAAqB;AACvB;AACA;EACE,0BAA0B;AAC5B;AACA;EACE,qBAAqB;AACvB;AACA;;EAEE,iBAAiB;AACnB;AACA;EACE,cAAc;EACd,yBAAyB;AAC3B;AACA;;;;EAIE,qBAAqB;AACvB;AACA,cAAc;AACd;EACE,aAAa;AACf;AACA;EACE,aAAa;EACb,mBAAmB;AACrB;AACA;EACE,gBAAgB;EAChB,YAAY;EACZ,eAAe;EACf,iBAAiB;EACjB,cAAc;EACd,8BAA8B;AAChC;AACA;EACE,iBAAiB;EACjB,eAAe;EACf,gBAAgB;EAChB,iBAAiB;AACnB;AACA;EACE,WAAW;AACb;AACA;;;EAGE,yBAAyB;AAC3B;AACA;EACE,gBAAgB;AAClB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,gBAAgB;EAChB,gBAAgB;AAClB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,0BAA0B;AAC5B;AACA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,wCAAwC;AAC1C;AACA;EACE,6BAA6B;AAC/B;AACA;EACE,gCAAgC;AAClC;AACA;EACE,8BAA8B;AAChC;AACA;EACE,+BAA+B;AACjC;AACA;EACE,yBAAyB;ACC3B;AACA;EACA,kBAAA;AACA;AACA;EACA,eAAA;EACA,iBAAA;EACA,cAAA;EACA,eAAA;EACA,cAAA;EACA,qBAAA;AACA;AACA;;EAEA,qBAAA;AACA;AACA;EACA,sBAAA;AACA;AACA;EACA,kBAAA;EACA,MAAA;EACA,SAAA;EACA,OAAA;EACA,QAAA;AACA;AACA;EACA,kBAAA;EACA,QAAA;EACA,SAAA;EACA,WAAA;EACA,gCAAA;EACA,wCAAA;AACA;AACA;EACA,aAAA;EACA,SAAA;EACA,UAAA;EACA,yBAAA;AACA;AACA;EACA,kBAAA;EACA,MAAA;EACA,SAAA;EACA,OAAA;EACA,QAAA;AACA;AACA;EACA,kBAAA;EDCE,QAAQ;EACR,SAAS;EACT,WAAW;EACX,gCAAgC;EAChC,wCAAwC;EACxC,kBAAkB;EAClB,yBAAyB;AAC3B;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,YAAY;AACd;AACA;EACE,qBAAqB;EACrB,cAAc;AAChB;AACA;;;EAGE,qBAAqB;EACrB,cAAc;AAChB;AACA;EACE,aAAa;AACf;AACA;EACE,YAAY;AACd;AACA;EACE,gBAAgB;AAClB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,kBAAkB;AACpB;AACA;AACE;IACE,kBAAkB;AACpB;AACF;AACA;EACE,+BAA+B;EAC/B,uBAAuB;AACzB;AACA;EACE,mBAAmB;EACnB,yBAAyB;EACzB,eAAe;EACf,qBAAqB;EACrB,cAAc;AAChB;AACA;EACE,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;EACvB,eAAe;EACf,sBAAsB;AACxB;AACA;yCACyC;AACzC;EACE,gBAAgB;AAClB;AACA,wBAAwB;AACxB;EACE,eAAe;AACjB;AACA;EACE,eAAe;AACjB;AACA;EACE,eAAe;AACjB;AACA;EACE,eAAe;AACjB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,aAAa;AACf;AACA;EACE,8BAA8B;EAC9B,+BAA+B;AACjC;AACA;EACE,aAAa;EACb,eAAe;EACf,kBAAkB;EAClB,gCAAgC;AAClC;AACA;EACE,OAAO;AACT;AACA;EACE,kBAAkB;AACpB;AACA;EACE,cAAc;EACd,kBAAkB;EAClB,yBAAyB;AAC3B;AACA;EACE,aAAa;EACb,iBAAiB;EACjB,kBAAkB;AACpB;AACA;EACE,aAAa;AACf;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,gBAAgB;EAChB,MAAM;EACN,iBAAiB;EACjB,YAAY;EACZ,kBAAkB;EAClB,WAAW;EACX,OAAO;AACT;AACA;EACE,YAAY;AACd;AACA;EACE,gCAAgC;EAChC,yBAAyB;AAC3B","file":"UserList.vue","sourcesContent":["/* palette colors*/\n/* the element that this class is applied to, should have a max width for this to work*/\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n}\na {\n  cursor: pointer;\n}\na,\na:hover,\na:active,\na:focus,\n.btn,\n.btn:hover,\n.btn:active,\n.btn:focus {\n  outline: 0;\n}\nimg {\n  max-width: 100%;\n}\np {\n  margin: 10px 0;\n}\ndetails > summary {\n  cursor: pointer;\n}\ndetails > summary:focus {\n  outline: none;\n}\n.text-color {\n  color: #36414c !important;\n}\n.text-muted {\n  color: #8D99A6 !important;\n}\n.text-extra-muted {\n  color: #d1d8dd !important;\n}\na,\n.badge {\n  -webkit-transition: 0.2s;\n  -o-transition: 0.2s;\n  transition: 0.2s;\n}\n.btn {\n  -webkit-transition: background-color 0.2s;\n  -o-transition: background-color 0.2s;\n  transition: background-color 0.2s;\n}\na.disabled,\na.disabled:hover {\n  color: #888;\n  cursor: default;\n  text-decoration: none;\n}\na.grey,\n.sidebar-section a,\n.control-value a,\n.data-row a {\n  text-decoration: none;\n}\na.grey:hover,\n.sidebar-section a:hover,\n.control-value a:hover,\n.data-row a:hover,\na.grey:focus,\n.sidebar-section a:focus,\n.control-value a:focus,\n.data-row a:focus {\n  text-decoration: underline;\n}\na.text-muted,\na.text-extra-muted {\n  text-decoration: none;\n}\n.underline {\n  text-decoration: underline;\n}\n.inline-block {\n  display: inline-block;\n}\n.bold,\n.strong {\n  font-weight: bold;\n}\nkbd {\n  color: inherit;\n  background-color: #f0f4f7;\n}\n.btn [class^=\"fa fa-\"],\n.nav [class^=\"fa fa-\"],\n.btn [class*=\"fa fa-\"],\n.nav [class*=\"fa fa-\"] {\n  display: inline-block;\n}\n/* dropdowns */\n.dropdown-backdrop {\n  display: none;\n}\n.dropdown-menu > li > a {\n  padding: 14px;\n  white-space: normal;\n}\n.dropdown-menu {\n  min-width: 200px;\n  padding: 0px;\n  font-size: 12px;\n  max-height: 500px;\n  overflow: auto;\n  border-radius: 0px 0px 4px 4px;\n}\n.dropdown-menu .dropdown-header {\n  padding: 3px 14px;\n  font-size: 11px;\n  font-weight: 200;\n  padding-top: 12px;\n}\n.dropdown-menu .divider {\n  margin: 0px;\n}\na.badge-hover:hover .badge,\na.badge-hover:focus .badge,\na.badge-hover:active .badge {\n  background-color: #d8dfe5;\n}\n.msgprint-dialog {\n  max-width: 400px;\n}\n.msgprint-dialog .modal-content {\n  min-height: 110px;\n}\n.msgprint-scroll {\n  max-height: 36em;\n  overflow: scroll;\n}\n.msgprint {\n  word-wrap: break-word;\n}\n.msgprint pre {\n  text-align: left;\n}\n.msgprint a:not(.btn) {\n  text-decoration: underline;\n}\n.centered {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  -webkit-transform: translate(-50%, -50%);\n}\n.border-top {\n  border-top: 1px solid #d1d8dd;\n}\n.border-bottom {\n  border-bottom: 1px solid #d1d8dd;\n}\n.border-left {\n  border-left: 1px solid #d1d8dd;\n}\n.border-right {\n  border-right: 1px solid #d1d8dd;\n}\n.border {\n  border: 1px solid #d1d8dd;\n}\n.rounded {\n  border-radius: 4px;\n}\n.close-inline {\n  font-size: 120%;\n  font-weight: bold;\n  line-height: 1;\n  cursor: pointer;\n  color: inherit;\n  display: inline-block;\n}\n.close-inline:hover,\n.close-inline:focus {\n  text-decoration: none;\n}\n.middle {\n  vertical-align: middle;\n}\n.full-center-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n.full-center {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 100%;\n  transform: translate(-50%, -50%);\n  -webkit-transform: translate(-50%, -50%);\n}\n#freeze {\n  z-index: 1020;\n  bottom: 0;\n  opacity: 0;\n  background-color: #fafbfc;\n}\n#freeze .freeze-message-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n#freeze .freeze-message {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 100%;\n  transform: translate(-50%, -50%);\n  -webkit-transform: translate(-50%, -50%);\n  text-align: center;\n  color: #36414c !important;\n}\n#freeze.dark {\n  background-color: #334143;\n}\n#freeze.in {\n  opacity: 0.5;\n}\na.no-decoration {\n  text-decoration: none;\n  color: inherit;\n}\na.no-decoration:hover,\na.no-decoration:focus,\na.no-decoration:active {\n  text-decoration: none;\n  color: inherit;\n}\n.padding {\n  padding: 15px;\n}\n.margin {\n  margin: 15px;\n}\n.margin-top {\n  margin-top: 15px;\n}\n.margin-bottom {\n  margin-bottom: 15px;\n}\n.margin-left {\n  margin-left: 15px;\n}\n.margin-right {\n  margin-right: 15px;\n}\n@media (max-width: 767px) {\n  .text-center-xs {\n    text-align: center;\n  }\n}\n.grayscale {\n  -webkit-filter: grayscale(100%);\n  filter: grayscale(100%);\n}\n.uppercase {\n  padding-bottom: 4px;\n  text-transform: uppercase;\n  font-size: 12px;\n  letter-spacing: 0.4px;\n  color: #8d99a6;\n}\n.ellipsis {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n  vertical-align: middle;\n}\n/* Given that the element that text-ellipsis is applied to,\n\tshould have a max width for it to work */\n.ellipsis-width {\n  max-width: 200px;\n}\n/* Font size utilities */\n.text-regular {\n  font-size: 14px;\n}\n.text-medium {\n  font-size: 12px;\n}\n.text-small {\n  font-size: 10px;\n}\n.text-large {\n  font-size: 16px;\n}\n.disable-click {\n  pointer-events: none;\n}\n.popover-title {\n  display: none;\n}\n.user-list {\n  border-left: 1px solid #d1d8dd;\n  border-right: 1px solid #d1d8dd;\n}\n.user-list .user-card {\n  display: flex;\n  cursor: pointer;\n  padding: 12px 15px;\n  border-bottom: 1px solid #d1d8dd;\n}\n.user-list .user-card .user-details {\n  flex: 1;\n}\n.user-list .user-card .user-details .italic {\n  font-style: italic;\n}\n.rank-column {\n  flex: 0 0 30px;\n  align-self: center;\n  color: #8D99A6 !important;\n}\n.flex-20 {\n  flex: 0 0 20%;\n  text-align: right;\n  align-self: center;\n}\n.flex-40 {\n  flex: 0 0 40%;\n}\n.user-list-header {\n  background-color: #fafbfc;\n}\n.search-bar {\n  position: sticky;\n  top: 0;\n  background: white;\n  height: 75px;\n  text-align: center;\n  width: 100%;\n  left: 0;\n}\n.search-bar div {\n  margin: auto;\n}\n.energy-point-history {\n  border-bottom: 1px solid #d1d8dd;\n  background-color: #fafbfc;\n}\n","<template>\n\t<div class=\"user-list-container\">\n\t\t<ul class=\"list-unstyled user-list\">\n\t\t\t<li class=\"user-card user-list-header text-medium\">\n\t\t\t\t<span class=\"rank-column\"></span>\n\t\t\t\t<span class=\"user-details text-muted\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\tplaceholder=\"Search User\"\n\t\t\t\t\t\tv-model=\"filter_users_by\"\n\t\t\t\t\t>\n\t\t\t\t</span>\n\t\t\t\t<span class=\"flex-40\"></span>\n\t\t\t\t<span class=\"flex-20 text-muted\">\n\t\t\t\t\t<select class=\"form-control\" data-toggle=\"tooltip\" title=\"Period\" v-model=\"period\">\n\t\t\t\t\t\t<option v-for=\"value in period_options\" :key=\"value\" :value=\"value\">{{ value }}</option>\n\t\t\t\t\t</select>\n\t\t\t\t</span>\n\t\t\t</li>\n\t\t\t<li class=\"user-card user-list-header text-medium\">\n\t\t\t\t<span class=\"rank-column\">#</span>\n\t\t\t\t<span class=\"user-details text-muted\">{{ __('User') }}</span>\n\t\t\t\t<span\n\t\t\t\t\tclass=\"flex-20 text-muted\"\n\t\t\t\t\tv-for=\"title in ['Energy Points', 'Review Points', 'Points Given']\"\n\t\t\t\t\t:key=\"title\"\n\t\t\t\t>{{ __(title) }}</span>\n\t\t\t</li>\n\t\t\t<li v-for=\"(user, index) in filtered_users\" :key=\"user.name\">\n\t\t\t\t<div class=\"user-card\">\n\t\t\t\t\t<span class=\"user-details flex\" @click=\"go_to_profile_page(user.name)\">\n\t\t\t\t\t\t<span class=\"rank-column\">{{ index + 1 }}</span>\n\t\t\t\t\t\t<span v-html=\"get_avatar(user.name)\"></span>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{{ user.fullname }}\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass=\"text-muted text-medium\"\n\t\t\t\t\t\t\t\t:class=\"{'italic': !user.bio}\"\n\t\t\t\t\t\t\t>{{ frappe.ellipsis(user.bio, 100) || 'No Bio'}}</div>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"text-muted text-nowrap flex-20\"\n\t\t\t\t\t\tv-for=\"key in ['energy_points', 'review_points', 'given_points']\"\n\t\t\t\t\t\t:key=\"key\"\n\t\t\t\t\t\t@click=\"toggle_log(user.name)\"\n\t\t\t\t\t>{{ user[key] }}</span>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t\t<li class=\"user-card text-muted\" v-if=\"!filtered_users.length\">{{__('No user found')}}</li>\n\t\t</ul>\n\t</div>\n</template>\n<script>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tusers: [],\n\t\t\tfilter_users_by: null,\n\t\t\tsort_users_by: 'energy_points',\n\t\t\tsort_order: 'desc',\n\t\t\tshow_log_for: null,\n\t\t\tperiod_options: ['Lifetime', 'This Month', 'This Week', 'Today'],\n\t\t\tperiod: 'This Month'\n\t\t};\n\t},\n\tcomputed: {\n\t\tfrom_date() {\n\t\t\tif (this.period === 'This Month') {\n\t\t\t\treturn frappe.datetime.month_start();\n\t\t\t}\n\t\t\tif (this.period === 'This Week') {\n\t\t\t\treturn frappe.datetime.week_start();\n\t\t\t}\n\t\t\tif (this.period === 'Today') {\n\t\t\t\treturn frappe.datetime.get_today();\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tfiltered_users() {\n\t\t\tlet filtered = this.users.slice();\n\t\t\tif (this.filter_users_by) {\n\t\t\t\tfiltered = filtered.filter(user =>\n\t\t\t\t\tuser.fullname\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t.includes(this.filter_users_by.toLowerCase())\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.sort_users_by) {\n\t\t\t\tfiltered.sort((a, b) => {\n\t\t\t\t\tconst value_a = a[this.sort_users_by];\n\t\t\t\t\tconst value_b = b[this.sort_users_by];\n\n\t\t\t\t\tlet return_value = 0;\n\t\t\t\t\tif (value_a > value_b) {\n\t\t\t\t\t\treturn_value = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value_a < value_b) {\n\t\t\t\t\t\treturn_value = -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.sort_order === 'desc') {\n\t\t\t\t\t\treturn_value = -return_value;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn return_value;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn filtered;\n\t\t}\n\t},\n\twatch: {\n\t\tperiod() {\n\t\t\tthis.fetch_users_energy_points_and_update_users();\n\t\t}\n\t},\n\tmounted() {\n\t\t$('[data-toggle=\"tooltip\"]').tooltip();\n\t},\n\tcreated() {\n\t\tconst standard_users = ['Administrator', 'Guest', 'guest@example.com'];\n\t\tthis.users = frappe.boot.user_info;\n\t\t// delete standard users from the list\n\t\tstandard_users.forEach(user => delete this.users[user]);\n\t\tthis.users = Object.values(this.users);\n\t\tthis.fetch_users_energy_points_and_update_users();\n\t\tfrappe.realtime.on('update_points', () => {\n\t\t\tthis.fetch_users_energy_points_and_update_users();\n\t\t});\n\t},\n\tmethods: {\n\t\tget_avatar(user) {\n\t\t\treturn frappe.avatar(user, 'avatar-medium');\n\t\t},\n\t\tgo_to_profile_page(user) {\n\t\t\tfrappe.set_route('social', 'profile', user);\n\t\t},\n\t\tfetch_users_energy_points_and_update_users() {\n\t\t\tfrappe\n\t\t\t\t.xcall(\n\t\t\t\t\t'frappe.social.doctype.energy_point_log.energy_point_log.get_user_energy_and_review_points',\n\t\t\t\t\t{\n\t\t\t\t\t\tfrom_date: this.from_date\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.then(data => {\n\t\t\t\t\tlet users = this.users.slice();\n\t\t\t\t\tthis.users = users.map(user => {\n\t\t\t\t\t\tconst points = data[user.name] || {};\n\t\t\t\t\t\tuser.energy_points = points.energy_points || 0;\n\t\t\t\t\t\tuser.review_points = points.review_points || 0;\n\t\t\t\t\t\tuser.given_points = points.given_points || 0;\n\t\t\t\t\t\treturn user;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t},\n\t\ttoggle_log(user) {\n\t\t\tfrappe.set_route('List', 'Energy Point Log', {user:user});\n\t\t}\n\t}\n};\n</script>\n<style lang=\"less\" scoped>\n@import 'frappe/public/less/common';\n.user-list {\n\tborder-left: 1px solid @border-color;\n\tborder-right: 1px solid @border-color;\n\t.user-card {\n\t\tdisplay: flex;\n\t\tcursor: pointer;\n\t\tpadding: 12px 15px;\n\t\tborder-bottom: 1px solid @border-color;\n\t\t.user-details {\n\t\t\tflex: 1;\n\t\t\t.italic {\n\t\t\t\tfont-style: italic;\n\t\t\t}\n\t\t}\n\t}\n}\n.rank-column {\n\tflex: 0 0 30px;\n\talign-self: center;\n\t.text-muted\n}\n.flex-20 {\n\tflex: 0 0 20%;\n\ttext-align: right;\n\talign-self: center;\n}\n.flex-40 {\n\tflex: 0 0 40%;\n}\n.user-list-header {\n\tbackground-color: @light-bg;\n}\n.search-bar {\n\tposition: sticky;\n\ttop: 0;\n\tbackground: white;\n\theight: 75px;\n\ttext-align: center;\n\tdiv {\n\t\tmargin: auto;\n\t}\n\twidth: 100%;\n\tleft: 0;\n}\n.energy-point-history {\n\tborder-bottom: 1px solid @border-color;\n\tbackground-color: @light-bg;\n}\n</style>\n\n\n\n"]}, media: undefined });

	  };
	  /* scoped */
	  var __vue_scope_id__$c = "data-v-5b5b5e6d";
	  /* module identifier */
	  var __vue_module_identifier__$c = undefined;
	  /* functional template */
	  var __vue_is_functional_template__$c = false;
	  /* component normalizer */
	  function __vue_normalize__$c(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/pages/UserList.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    {
	      var hook;
	      if (style) {
	        hook = function(context) {
	          style.call(this, createInjector(context));
	        };
	      }

	      if (hook !== undefined) {
	        if (component.functional) {
	          // register for functional component in vue file
	          var originalRender = component.render;
	          component.render = function renderWithStyleInjection(h, context) {
	            hook.call(context);
	            return originalRender(h, context)
	          };
	        } else {
	          // inject component registration as beforeCreate hook
	          var existing = component.beforeCreate;
	          component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
	        }
	      }
	    }

	    return component
	  }
	  /* style inject */
	  function __vue_create_injector__$a() {
	    var head = document.head || document.getElementsByTagName('head')[0];
	    var styles = __vue_create_injector__$a.styles || (__vue_create_injector__$a.styles = {});
	    var isOldIE =
	      typeof navigator !== 'undefined' &&
	      /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

	    return function addStyle(id, css) {
	      if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

	      var group = isOldIE ? css.media || 'default' : id;
	      var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

	      if (!style.ids.includes(id)) {
	        var code = css.source;
	        var index = style.ids.length;

	        style.ids.push(id);

	        if (isOldIE) {
	          style.element = style.element || document.querySelector('style[data-group=' + group + ']');
	        }

	        if (!style.element) {
	          var el = style.element = document.createElement('style');
	          el.type = 'text/css';

	          if (css.media) { el.setAttribute('media', css.media); }
	          if (isOldIE) {
	            el.setAttribute('data-group', group);
	            el.setAttribute('data-next-index', '0');
	          }

	          head.appendChild(el);
	        }

	        if (isOldIE) {
	          index = parseInt(style.element.getAttribute('data-next-index'));
	          style.element.setAttribute('data-next-index', index + 1);
	        }

	        if (style.element.styleSheet) {
	          style.parts.push(code);
	          style.element.styleSheet.cssText = style.parts
	            .filter(Boolean)
	            .join('\n');
	        } else {
	          var textNode = document.createTextNode(code);
	          var nodes = style.element.childNodes;
	          if (nodes[index]) { style.element.removeChild(nodes[index]); }
	          if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
	          else { style.element.appendChild(textNode); }
	        }
	      }
	    }
	  }
	  /* style inject SSR */
	  

	  
	  var UserList = __vue_normalize__$c(
	    { render: __vue_render__$c, staticRenderFns: __vue_staticRenderFns__$c },
	    __vue_inject_styles__$c,
	    __vue_script__$b,
	    __vue_scope_id__$c,
	    __vue_is_functional_template__$c,
	    __vue_module_identifier__$c,
	    __vue_create_injector__$a,
	    undefined
	  );

	/* script */

	/* template */
	var __vue_render__$d = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", [_vm._v("\n\tNot Found\n")])
	};
	var __vue_staticRenderFns__$d = [];
	__vue_render__$d._withStripped = true;

	  /* style */
	  var __vue_inject_styles__$d = undefined;
	  /* scoped */
	  var __vue_scope_id__$d = undefined;
	  /* module identifier */
	  var __vue_module_identifier__$d = undefined;
	  /* functional template */
	  var __vue_is_functional_template__$d = false;
	  /* component normalizer */
	  function __vue_normalize__$d(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/components/NotFound.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    return component
	  }
	  /* style inject */
	  
	  /* style inject SSR */
	  

	  
	  var NotFound = __vue_normalize__$d(
	    { render: __vue_render__$d, staticRenderFns: __vue_staticRenderFns__$d },
	    __vue_inject_styles__$d,
	    {},
	    __vue_scope_id__$d,
	    __vue_is_functional_template__$d,
	    __vue_module_identifier__$d,
	    undefined,
	    undefined
	  );

	//
	//
	//
	//
	//
	//
	//
	//
	//
	//

	var script$c = {
		props: ['src'],
		data: function data() {
			return {
				full_size: false
			}
		},
		created: function created() {
			document.addEventListener('keyup', this.close_preview_on_escape);
		},
		destroyed: function destroyed() {
			document.removeEventListener('keyup', this.close_preview_on_escape);
		},
		methods: {
			close_preview_on_escape: function close_preview_on_escape(e) {
				if (e.keyCode === 27) {
					this.$root.$emit('hide_preview');
				}
			}
		}
	};

	/* script */
	            var __vue_script__$c = script$c;
	            
	/* template */
	var __vue_render__$e = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c("div", { staticClass: "backdrop" }, [
	    _c("img", {
	      class: { "psuedo-zoom": _vm.full_size },
	      attrs: { src: _vm.src },
	      on: {
	        dblclick: function($event) {
	          _vm.full_size = !_vm.full_size;
	        }
	      }
	    }),
	    _vm._v(" "),
	    _c("i", {
	      staticClass: "fa fa-close close",
	      on: {
	        click: function($event) {
	          return _vm.$root.$emit("hide_preview")
	        }
	      }
	    })
	  ])
	};
	var __vue_staticRenderFns__$e = [];
	__vue_render__$e._withStripped = true;

	  /* style */
	  var __vue_inject_styles__$e = function (inject) {
	    if (!inject) { return }
	    inject("data-v-8e5afe7a_0", { source: ".backdrop[data-v-8e5afe7a] {\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  background: #0000006e;\n  z-index: 1030;\n  top: 0;\n  right: 0;\n}\n.backdrop img[data-v-8e5afe7a] {\n  margin: auto;\n  display: block;\n  width: 80%;\n  max-width: 700px;\n  padding-top: 100px;\n}\n.backdrop .psuedo-zoom[data-v-8e5afe7a] {\n  padding: 10px 0px;\n  width: auto;\n  height: 100vh;\n  max-width: initial;\n}\n.backdrop .close[data-v-8e5afe7a] {\n  position: absolute;\n  top: 15px;\n  right: 35px;\n  color: black;\n  font-size: 30px;\n}\n", map: {"version":3,"sources":["ImageViewer.vue"],"names":[],"mappings":"AAAA;EACE,eAAe;EACf,YAAY;EACZ,WAAW;EACX,qBAAqB;EACrB,aAAa;EACb,MAAM;EACN,QAAQ;AACV;AACA;EACE,YAAY;EACZ,cAAc;EACd,UAAU;EACV,gBAAgB;EAChB,kBAAkB;AACpB;AACA;EACE,iBAAiB;EACjB,WAAW;EACX,aAAa;EACb,kBAAkB;AACpB;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,YAAY;EACZ,eAAe;AACjB","file":"ImageViewer.vue","sourcesContent":[".backdrop {\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  background: #0000006e;\n  z-index: 1030;\n  top: 0;\n  right: 0;\n}\n.backdrop img {\n  margin: auto;\n  display: block;\n  width: 80%;\n  max-width: 700px;\n  padding-top: 100px;\n}\n.backdrop .psuedo-zoom {\n  padding: 10px 0px;\n  width: auto;\n  height: 100vh;\n  max-width: initial;\n}\n.backdrop .close {\n  position: absolute;\n  top: 15px;\n  right: 35px;\n  color: black;\n  font-size: 30px;\n}\n"]}, media: undefined });

	  };
	  /* scoped */
	  var __vue_scope_id__$e = "data-v-8e5afe7a";
	  /* module identifier */
	  var __vue_module_identifier__$e = undefined;
	  /* functional template */
	  var __vue_is_functional_template__$e = false;
	  /* component normalizer */
	  function __vue_normalize__$e(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/components/ImageViewer.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    {
	      var hook;
	      if (style) {
	        hook = function(context) {
	          style.call(this, createInjector(context));
	        };
	      }

	      if (hook !== undefined) {
	        if (component.functional) {
	          // register for functional component in vue file
	          var originalRender = component.render;
	          component.render = function renderWithStyleInjection(h, context) {
	            hook.call(context);
	            return originalRender(h, context)
	          };
	        } else {
	          // inject component registration as beforeCreate hook
	          var existing = component.beforeCreate;
	          component.beforeCreate = existing ? [].concat(existing, hook) : [hook];
	        }
	      }
	    }

	    return component
	  }
	  /* style inject */
	  function __vue_create_injector__$b() {
	    var head = document.head || document.getElementsByTagName('head')[0];
	    var styles = __vue_create_injector__$b.styles || (__vue_create_injector__$b.styles = {});
	    var isOldIE =
	      typeof navigator !== 'undefined' &&
	      /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());

	    return function addStyle(id, css) {
	      if (document.querySelector('style[data-vue-ssr-id~="' + id + '"]')) { return } // SSR styles are present.

	      var group = isOldIE ? css.media || 'default' : id;
	      var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });

	      if (!style.ids.includes(id)) {
	        var code = css.source;
	        var index = style.ids.length;

	        style.ids.push(id);

	        if (isOldIE) {
	          style.element = style.element || document.querySelector('style[data-group=' + group + ']');
	        }

	        if (!style.element) {
	          var el = style.element = document.createElement('style');
	          el.type = 'text/css';

	          if (css.media) { el.setAttribute('media', css.media); }
	          if (isOldIE) {
	            el.setAttribute('data-group', group);
	            el.setAttribute('data-next-index', '0');
	          }

	          head.appendChild(el);
	        }

	        if (isOldIE) {
	          index = parseInt(style.element.getAttribute('data-next-index'));
	          style.element.setAttribute('data-next-index', index + 1);
	        }

	        if (style.element.styleSheet) {
	          style.parts.push(code);
	          style.element.styleSheet.cssText = style.parts
	            .filter(Boolean)
	            .join('\n');
	        } else {
	          var textNode = document.createTextNode(code);
	          var nodes = style.element.childNodes;
	          if (nodes[index]) { style.element.removeChild(nodes[index]); }
	          if (nodes.length) { style.element.insertBefore(textNode, nodes[index]); }
	          else { style.element.appendChild(textNode); }
	        }
	      }
	    }
	  }
	  /* style inject SSR */
	  

	  
	  var ImageViewer = __vue_normalize__$e(
	    { render: __vue_render__$e, staticRenderFns: __vue_staticRenderFns__$e },
	    __vue_inject_styles__$e,
	    __vue_script__$c,
	    __vue_scope_id__$e,
	    __vue_is_functional_template__$e,
	    __vue_module_identifier__$e,
	    __vue_create_injector__$b,
	    undefined
	  );

	//

	function get_route_map() {
		return {
			'social/home': {
				'component': Wall,
				'props': {}
			},
			'social/profile/*': {
				'component': Profile,
				'props': {
					'user_id': frappe.get_route()[2],
					'key': frappe.get_route()[2]
				}
			},
			'social/users': {
				'component': UserList,
				'props': {}
			},
			'not_found': {
				'component': NotFound,
			}
		}
	}

	var script$d = {
		components: {
			ImageViewer: ImageViewer
		},
		data: function data() {
			return {
				current_page: this.get_current_page(),
				show_preview: false,
				preview_image_src: ''
			}
		},
		created: function created() {
			var this$1 = this;

			this.$root.$on('show_preview', function (src) {
				this$1.preview_image_src = src;
				this$1.show_preview = true;
			});

			this.$root.$on('hide_preview', function () {
				this$1.preview_image_src = '';
				this$1.show_preview = false;
			});

			this.update_primary_action(frappe.get_route()[1]);
		},
		mounted: function mounted() {
			var this$1 = this;

			frappe.route.on('change', function () {
				if (frappe.get_route()[0] === 'social') {
					this$1.set_current_page();
					this$1.update_primary_action(frappe.get_route()[1]);
					frappe.utils.scroll_to(0);
					$("body").attr("data-route", frappe.get_route_str());
				}
			});
			frappe.ui.setup_like_popover($(this.$refs.social), '.likes', false);
		},
		methods: {
			set_current_page: function set_current_page() {
				this.current_page = this.get_current_page();
			},
			update_primary_action: function update_primary_action(current_route) {
				if (current_route === 'home') {
					this.$root.page.set_title(__('Social'));
					frappe.breadcrumbs.update();
					this.$root.page.set_primary_action(__('Post'), function () {
						frappe.social.post_dialog.show();
					});
				} else {
					frappe.breadcrumbs.add({
						type: 'Custom',
						label: __('Social Home'),
						route: '#social/home'
					});
					this.$root.page.clear_primary_action();
				}

				if (current_route === 'users') {
					this.$root.page.set_title(__('Leaderboard'));
				}
			},
			get_current_page: function get_current_page() {
				var route_map = get_route_map();
				var route = frappe.get_route_str();
				if (route_map[route]) {
					return route_map[route];
				} else {
					return route_map[route.substring(0, route.lastIndexOf('/')) + '/*'] || route_map['not_found']
				}
			},
		}
	};

	/* script */
	            var __vue_script__$d = script$d;
	            
	/* template */
	var __vue_render__$f = function() {
	  var _vm = this;
	  var _h = _vm.$createElement;
	  var _c = _vm._self._c || _h;
	  return _c(
	    "div",
	    { ref: "social", staticClass: "social" },
	    [
	      _c(
	        "keep-alive",
	        [
	          _c(
	            _vm.current_page.component,
	            _vm._b(
	              { tag: "component" },
	              "component",
	              _vm.current_page.props,
	              false
	            )
	          )
	        ],
	        1
	      ),
	      _vm._v(" "),
	      _vm.show_preview
	        ? _c("image-viewer", { attrs: { src: _vm.preview_image_src } })
	        : _vm._e()
	    ],
	    1
	  )
	};
	var __vue_staticRenderFns__$f = [];
	__vue_render__$f._withStripped = true;

	  /* style */
	  var __vue_inject_styles__$f = undefined;
	  /* scoped */
	  var __vue_scope_id__$f = undefined;
	  /* module identifier */
	  var __vue_module_identifier__$f = undefined;
	  /* functional template */
	  var __vue_is_functional_template__$f = false;
	  /* component normalizer */
	  function __vue_normalize__$f(
	    template, style, script,
	    scope, functional, moduleIdentifier,
	    createInjector, createInjectorSSR
	  ) {
	    var component = (typeof script === 'function' ? script.options : script) || {};

	    // For security concerns, we use only base name in production mode.
	    component.__file = "/home/mieone/Downloads/frappe-practice/frappe-bench/apps/frappe/frappe/public/js/frappe/social/Home.vue";

	    if (!component.render) {
	      component.render = template.render;
	      component.staticRenderFns = template.staticRenderFns;
	      component._compiled = true;

	      if (functional) { component.functional = true; }
	    }

	    component._scopeId = scope;

	    return component
	  }
	  /* style inject */
	  
	  /* style inject SSR */
	  

	  
	  var Home = __vue_normalize__$f(
	    { render: __vue_render__$f, staticRenderFns: __vue_staticRenderFns__$f },
	    __vue_inject_styles__$f,
	    __vue_script__$d,
	    __vue_scope_id__$f,
	    __vue_is_functional_template__$f,
	    __vue_module_identifier__$f,
	    undefined,
	    undefined
	  );

	frappe.provide('frappe.social');

	frappe.social.Home = class SocialHome {
		constructor(ref) {
		var parent = ref.parent;

			this.$parent = $(parent);
			this.page = parent.page;
			this.setup_header();
			this.make_body();
		}
		make_body() {
			this.$social_container = this.$parent.find('.layout-main');
			new Vue({
				el: this.$social_container[0],
				render: function (h) { return h(Home); },
				data: {
					'page': this.page
				}
			});
		}
		setup_header() {
			this.page.set_title(__('Social'));
		}
	};

	frappe.social.post_dialog = new frappe.ui.Dialog({
		title: __('Create Post'),
		fields: [
			{
				fieldtype: "Text Editor",
				fieldname: "content",
				label: __("Content"),
				reqd: 1
			}
		],
		primary_action_label: __('Post'),
		primary_action: function (values) {
			frappe.social.post_dialog.disable_primary_action();
			var post = frappe.model.get_new_doc('Post');
			post.content = values.content;
			frappe.db.insert(post).then(function () {
				frappe.social.post_dialog.clear();
				frappe.social.post_dialog.hide();
			}).finally(function () {
				frappe.social.post_dialog.enable_primary_action();
			});
		}
	});

	frappe.social.is_home_page = function () {
		return frappe.get_route()[0] === 'social' && frappe.get_route()[1] === 'home';
	};

	frappe.social.is_profile_page = function (user) {
		return frappe.get_route()[0] === 'social'
			&& frappe.get_route()[1] === 'profile'
			&& (user ? frappe.get_route()[2] === user : true);
	};

	frappe.social.is_session_user_page = function () {
		return frappe.social.is_profile_page() && frappe.get_route()[2] === frappe.session.user;
	};

	frappe.provide('frappe.app_updates');

	frappe.utils.make_event_emitter(frappe.app_updates);

}());
//# sourceMappingURL=social.min.js.map
